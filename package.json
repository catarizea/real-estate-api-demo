{
  "name": "real-estate-api-demo",
  "version": "1.0.1",
  "description": "OpenAPI for a search-to-rent application.",
  "main": "index.ts",
  "scripts": {
    "algolia:seed": "bun ./src/utils/db/seed/algolia/index.ts",
    "build": "dotenv -e .env.prod -- bun build ./index.ts --outdir ./build --target bun --minify",
    "build:actions": "bun build ./index.ts --outdir ./build --target bun --minify",
    "docker:image:build": "docker build --pull -t real-estate-api-demo .",
    "docker:container:start": "dotenv -e .env.dev -v BUN_ENV=production -- docker-compose up -d",
    "docker:container:stop": "docker stop real-estate-api-demo-container",
    "codegen:client": "openapi-rq -i ./spec/spec.json -o ./client -c axios",
    "codegen:validators": "bun ./src/validators/codegen/generate.ts generate",
    "db:push": "drizzle-kit push:mysql --config=drizzle.config.ts",
    "db:generate:migration": "drizzle-kit generate:mysql --config=drizzle.config.ts",
    "db:migrate": "bun ./src/utils/db/migrate.ts",
    "db:create:views": "pscale shell real-estate-api-demo dev < ./sql/createViews.sql",
    "db:create:all": "pscale shell real-estate-api-demo dev < ./sql/createAllTableFromView.sql",
    "db:seed": "bun ./src/utils/db/seed/index.ts",
    "db:seed:reset": "bun ./src/utils/db/seed/resetCursors.ts",
    "db:seed:addresses": "bun ./src/utils/db/seed/gmaps/generateAddresses.ts",
    "db:seed:communities": "bun ./src/utils/db/seed/wiki/scrapeCommunities.ts",
    "db:seed:community": "bun ./src/utils/db/seed/wiki/scrapeCommunity.ts",
    "db:studio": "drizzle-kit studio --config=drizzle.config.ts --port=3001",
    "db:speedtest:algolia": "bun ./src/utils/speedTests/algoliaGeoTest.ts",
    "db:speedtest:pscale": "bun ./src/utils/speedTests/pscaleGeoTest.ts",
    "dev": "bun --hot index.ts",
    "debug": "bun --inspect index.ts",
    "lint": "eslint \"src/**/*.{ts,tsx}\"",
    "move:up": "bun ./src/utils/tools/moveEnv.ts move up",
    "move:down": "bun ./src/utils/tools/moveEnv.ts move down",
    "openapi:generate": "run-s openapi:getspec openapi:validate openapi:portman",
    "openapi:getspec": "bun ./src/validators/openApiParser/saveCurrentSpec.ts",
    "openapi:validate": "bun ./src/validators/openApiParser",
    "openapi:portman": "portman -u ./spec/spec.json  -o ./spec/crm.postman.json",
    "postman:test:utils": "dotenv -e .env.dev -- bun ./src/utils/tools/postmanRunTests.ts",
    "postman:test:utils:actions": "bun ./src/utils/tools/postmanRunTests.ts",
    "postman:test:suite": "run-s postman:test:cleanup postman:test:utils",
    "postman:test:cleanup": "dotenv -e .env.dev -- bun ./src/utils/tools/cleanUpAfterTest.ts",
    "postman:test:cleanup:actions": "bun ./src/utils/tools/cleanUpAfterTest.ts",
    "start": "dotenv -e .env.dev -v BUN_ENV=production -- bun ./build/index.js",
    "start:actions": "bun index.ts",
    "start:postman:test": "dotenv -e .env.dev -v BUN_ENV=postman -- bun index.ts",
    "start:algolia:test": "dotenv -e .env.dev -v BUN_ENV=algolia -- bun index.ts",
    "test": "run-s postman:test:cleanup test:bun",
    "test:bun": "dotenv -e .env.dev -v BUN_ENV=test -- bun test",
    "test:bun:actions": "bun test",
    "test:postman": "dotenv -e .env.dev -v BUN_ENV=postman -- bun ./src/routes/__tests__/startAppAndRunPostmanTests.ts",
    "test:postman:actions": "bun ./src/routes/__tests__/startAppAndRunPostmanTests.ts",
    "test:workers": "run-s postman:test:cleanup workers:test:utils",
    "workers:test:utils": "dotenv -e .env.dev -v BUN_ENV=algolia -- bun test ./src/services/taskWorkers/__tests__/startAppAndReadStdout.ts",
    "workers:test:utils:actions": "bun test ./src/services/taskWorkers/__tests__/startAppAndReadStdout.ts"
  },
  "dependencies": {
    "@axiomhq/winston": "^1.0.0-rc.2",
    "@clerk/backend": "^0.38.1",
    "@hono/clerk-auth": "^1.0.1",
    "@hono/swagger-ui": "^0.2.1",
    "@hono/zod-openapi": "^0.9.6",
    "@paralleldrive/cuid2": "^2.2.2",
    "@planetscale/database": "^1.16.0",
    "@upstash/ratelimit": "^1.0.1",
    "@upstash/redis": "^1.28.4",
    "algoliasearch": "^4.22.1",
    "amqp-connection-manager": "^4.1.14",
    "amqplib": "^0.10.3",
    "drizzle-orm": "^0.29.3",
    "drizzle-zod": "^0.5.1",
    "geolib": "^3.3.4",
    "hono": "^4.0.4",
    "lodash.intersection": "^4.4.0",
    "lodash.omit": "^4.5.0",
    "lodash.pick": "^4.4.0",
    "lodash.without": "^4.4.0",
    "mysql2": "^3.9.1",
    "sqlstring": "^2.3.3",
    "winston": "^3.11.0"
  },
  "devDependencies": {
    "@7nohe/openapi-react-query-codegen": "^0.5.3",
    "@apideck/portman": "^1.26.3",
    "@faker-js/faker": "^8.3.1",
    "@readme/openapi-parser": "^2.5.0",
    "@types/amqplib": "^0.10.4",
    "@types/bun": "^1.0.5",
    "@types/ejs": "^3.1.5",
    "@types/lodash.intersection": "^4.4.9",
    "@types/lodash.omit": "^4.5.9",
    "@types/lodash.pick": "^4.4.9",
    "@types/lodash.without": "^4.4.9",
    "@types/node-geocoder": "^4.2.6",
    "@types/sqlstring": "^2.3.2",
    "@typescript-eslint/eslint-plugin": "^6.19.0",
    "axios": "^1.6.7",
    "axios-retry": "^4.0.0",
    "cheerio": "^1.0.0-rc.12",
    "commander": "^12.0.0",
    "cron": "^3.1.6",
    "dotenv-cli": "^7.3.0",
    "drizzle-kit": "^0.20.14",
    "ejs": "^3.1.9",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-plugin-simple-import-sort": "^12.0.0",
    "log-symbols": "^6.0.0",
    "move-file": "^3.1.0",
    "node-geocoder": "^4.3.0",
    "npm-run-all": "^4.1.5",
    "path": "^0.12.7",
    "prettier": "^3.2.5"
  }
}
