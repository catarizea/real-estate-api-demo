name: CI/CD

on:
  push:
    branches:
      - github-actions
    paths:
      - 'src/**'
      - 'package.json'
      - 'bun.lockb'
      - 'fly.toml'
      - 'Dockerfile'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      ALGOLIA_ADMIN_API_KEY: ${{ secrets.ALGOLIA_ADMIN_API_KEY }}
      ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
      AXIOM_API_TOKEN: ${{ secrets.AXIOM_API_TOKEN }}
      CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      CLOUDAMQP_URL: ${{ secrets.CLOUDAMQP_URL }}
      DATABASE_NAME: ${{ vars.DATABASE_NAME }}
      DATABASE_HOST: ${{ vars.DATABASE_HOST }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      GCLOUD_API_KEY: ${{ secrets.GCLOUD_API_KEY }}
      UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
      UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
      SERVER_TIMEZONE: ${{ vars.SERVER_TIMEZONE }}
      DATABASE_SEED_BLOCKED: ${{ vars.DATABASE_SEED_BLOCKED }}
      AXIOM_DATASET: ${{ vars.AXIOM_DATASET }}
      POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
      CLERK_JWT_TEST: ${{ secrets.CLERK_JWT_TEST }}
      BUN_ENV: dev
    concurrency: deploy-group
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.0.29'
      - run: bun install
      - run: bun run postman:test:cleanup:actions
      - run: bun run test:bun:actions
        env:
          BUN_ENV: test
      - run: bun run postman:test:cleanup:actions
      - run: bun run workers:test:utils:actions
        env:
          BUN_ENV: algolia
          CICD: true
      - run: bun run postman:test:cleanup:actions
      - run: bun run test:postman:actions
        env:
          BUN_ENV: postman
          CICD: true

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    concurrency: deploy-group
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: '1.0.29'
      - run: bun install
      - run: bun run build:actions
        env:
          BUN_ENV: production
          DATABASE_NAME: ${{ vars.DATABASE_NAME }}
          DATABASE_HOST: ${{ vars.DATABASE_HOST }}
          SERVER_TIMEZONE: ${{ vars.SERVER_TIMEZONE }}
          DATABASE_SEED_BLOCKED: ${{ vars.DATABASE_SEED_BLOCKED }}
          AXIOM_DATASET: ${{ vars.AXIOM_DATASET }}
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
