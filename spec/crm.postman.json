{
  "_": {
    "postman_id": "3f6d80a2-2d2e-481d-82c4-9dca39fec53e"
  },
  "item": [
    {
      "id": "2dfabf6a-bf39-4cf0-8c8f-2b226254f366",
      "name": "home",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "04d5223d-8394-49a1-ac92-83f8ed427296",
          "name": "/v1/",
          "request": {
            "name": "/v1/",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                ""
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "55f88d9d-7afc-4f9a-a86b-6513edd3a18c",
              "name": "Responds with a message",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    ""
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"message\": \"dolore labori\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "bbe13a46-8e23-4122-ba65-2216ca4e34ae",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    ""
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4d64f1b3-b845-476e-b942-0289503a4adc",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/v1/ - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/v1/ - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/v1/ - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"message\":{\"type\":\"string\"}},\"required\":[\"message\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/v1/ - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "1855f7ba-818b-47f3-b380-5b0acfa735f9",
      "name": "search",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "d542025e-5bce-46ab-88ec-ef853dfb5123",
          "name": "/v1/search",
          "request": {
            "name": "/v1/search",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "search"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"between\",\n      \"rent\",\n      1000,\n      2000\n    ],\n    [\n      \"like\",\n      \"address\",\n      \"Crescent\"\n    ],\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"smoking\",\n          1\n        ],\n        [\n          \"eq\",\n          \"cats\",\n          1\n        ],\n        [\n          \"eq\",\n          \"dogs\",\n          1\n        ]\n      ]\n    ],\n    [\n      \"aroundLatLng\",\n      50.9573828,\n      -114.084153,\n      1000\n    ]\n  ],\n  \"fields\": [\n    \"listingId\",\n    \"propertyId\",\n    \"rent\",\n    \"immediate\",\n    \"imageId\",\n    \"smoking\",\n    \"cats\",\n    \"dogs\"\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0dc1f11c-034e-4aca-9c4e-c1346a0dd4a9",
              "name": "Responds with an array of property unit objects. If no filters are used, all property units are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "search"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"between\",\n      \"rent\",\n      1000,\n      2000\n    ],\n    [\n      \"like\",\n      \"address\",\n      \"Crescent\"\n    ],\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"smoking\",\n          1\n        ],\n        [\n          \"eq\",\n          \"cats\",\n          1\n        ],\n        [\n          \"eq\",\n          \"dogs\",\n          1\n        ]\n      ]\n    ],\n    [\n      \"aroundLatLng\",\n      50.9573828,\n      -114.084153,\n      1000\n    ]\n  ],\n  \"fields\": [\n    \"listingId\",\n    \"propertyId\",\n    \"rent\",\n    \"immediate\",\n    \"imageId\",\n    \"smoking\",\n    \"cats\",\n    \"dogs\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"non labore culpa\",\n      \"propertyId\": \"in et officia ad\",\n      \"rent\": -31607676.916713685,\n      \"immediate\": 26620430.609418392,\n      \"availableDate\": \"labore aute\",\n      \"shortterm\": -23974387.58104089,\n      \"longterm\": 39505250.69286314,\n      \"furnished\": 26236652.463071093,\n      \"heat\": 82410777.42038548,\n      \"water\": -94772743.62999846,\n      \"electricity\": -70085385.8642188,\n      \"internet\": -12559111.211293891,\n      \"television\": 88514324.4730767,\n      \"bedroom\": \"sit dolore velit ullamco\",\n      \"bathroom\": \"reprehenderit sunt adipisicing tempor\",\n      \"listingId\": -91263383.58865494,\n      \"address\": \"ut velit exercitation incididunt consectetur\",\n      \"community\": \"qui veniam id in\",\n      \"type\": \"magna dolor est\",\n      \"smoking\": -40887584.46073988,\n      \"cats\": -34912432.54798708,\n      \"dogs\": 42367648.14715919,\n      \"parking\": \"consectetur Duis irure laborum\",\n      \"feature\": \"nisi Duis non\",\n      \"imageId\": \"dolore ea ut incididunt\",\n      \"latitude\": \"incididunt est non\",\n      \"longitude\": \"do tempor dolor id\"\n    },\n    {\n      \"id\": \"aute occaecat et\",\n      \"propertyId\": \"enim esse officia quis\",\n      \"rent\": -48395618.47140174,\n      \"immediate\": 78167737.19897845,\n      \"availableDate\": \"et adipisicing sit commodo esse\",\n      \"shortterm\": -31627063.158592477,\n      \"longterm\": 38845687.140913755,\n      \"furnished\": -97202710.18238229,\n      \"heat\": -78750774.06510541,\n      \"water\": -21287857.01650706,\n      \"electricity\": -17657848.899288803,\n      \"internet\": -78233302.44215408,\n      \"television\": -67972650.05319932,\n      \"bedroom\": \"do ad sit\",\n      \"bathroom\": \"ex Ut\",\n      \"listingId\": -34309936.48507248,\n      \"address\": \"est magna quis\",\n      \"community\": \"Ut\",\n      \"type\": \"ipsum in\",\n      \"smoking\": 92957204.1730856,\n      \"cats\": -11956687.427902862,\n      \"dogs\": 36443180.98704833,\n      \"parking\": \"consequat aliquip ut officia culpa\",\n      \"feature\": \"Ut culpa in\",\n      \"imageId\": \"cillum eu ea laboris\",\n      \"latitude\": \"anim nisi\",\n      \"longitude\": \"sit ipsum exercitation amet aute\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "628b72f9-a001-49cd-9ac1-bd12c5856616",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "search"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"between\",\n      \"rent\",\n      1000,\n      2000\n    ],\n    [\n      \"like\",\n      \"address\",\n      \"Crescent\"\n    ],\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"smoking\",\n          1\n        ],\n        [\n          \"eq\",\n          \"cats\",\n          1\n        ],\n        [\n          \"eq\",\n          \"dogs\",\n          1\n        ]\n      ]\n    ],\n    [\n      \"aroundLatLng\",\n      50.9573828,\n      -114.084153,\n      1000\n    ]\n  ],\n  \"fields\": [\n    \"listingId\",\n    \"propertyId\",\n    \"rent\",\n    \"immediate\",\n    \"imageId\",\n    \"smoking\",\n    \"cats\",\n    \"dogs\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b99e2097-ff24-4957-a59c-9e25174c035d",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "search"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"between\",\n      \"rent\",\n      1000,\n      2000\n    ],\n    [\n      \"like\",\n      \"address\",\n      \"Crescent\"\n    ],\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"smoking\",\n          1\n        ],\n        [\n          \"eq\",\n          \"cats\",\n          1\n        ],\n        [\n          \"eq\",\n          \"dogs\",\n          1\n        ]\n      ]\n    ],\n    [\n      \"aroundLatLng\",\n      50.9573828,\n      -114.084153,\n      1000\n    ]\n  ],\n  \"fields\": [\n    \"listingId\",\n    \"propertyId\",\n    \"rent\",\n    \"immediate\",\n    \"imageId\",\n    \"smoking\",\n    \"cats\",\n    \"dogs\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d15799c7-6f1d-4abd-8fec-9028f84e4eba",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/search - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/search - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/search - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"propertyId\":{\"type\":\"string\"},\"rent\":{\"type\":\"number\"},\"immediate\":{\"type\":\"number\"},\"availableDate\":{\"type\":\"string\"},\"shortterm\":{\"type\":\"number\"},\"longterm\":{\"type\":\"number\"},\"furnished\":{\"type\":\"number\"},\"heat\":{\"type\":\"number\"},\"water\":{\"type\":\"number\"},\"electricity\":{\"type\":\"number\"},\"internet\":{\"type\":\"number\"},\"television\":{\"type\":\"number\"},\"bedroom\":{\"type\":\"string\"},\"bathroom\":{\"type\":\"string\"},\"listingId\":{\"type\":\"number\"},\"address\":{\"type\":\"string\"},\"community\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"},\"smoking\":{\"type\":\"number\"},\"cats\":{\"type\":\"number\"},\"dogs\":{\"type\":\"number\"},\"parking\":{\"type\":\"string\"},\"feature\":{\"type\":\"string\"},\"imageId\":{\"type\":\"string\"},\"latitude\":{\"type\":\"string\"},\"longitude\":{\"type\":\"string\"}},\"required\":[\"id\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/search - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "e052a54b-70a6-49c6-8865-82419e1cac91",
      "name": "bathroom",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a6c81d73-bf2a-4fd0-b67d-cbd46834dd22",
          "name": "/v1/bathroom/list",
          "request": {
            "name": "/v1/bathroom/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "bathroom",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "updatedAt-desc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "cb42c9c4-a60b-40e3-ac7f-949a95778a68",
              "name": "Responds with an array of bathroom objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"labore ea sit incididunt\",\n      \"name\": \"in consectetur anim\",\n      \"order\": -3894539.451474935,\n      \"createdAt\": \"Ut\",\n      \"updatedAt\": \"nisi do\"\n    },\n    {\n      \"id\": \"consectetur irure\",\n      \"name\": \"amet consectetur sit Duis\",\n      \"order\": -53883371.626426294,\n      \"createdAt\": \"dolor tempor Ut sint\",\n      \"updatedAt\": \"cillum Excepteur sed\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c7c2fb58-d5e3-4e6e-aa3c-878812fee76f",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3f38dabd-5270-4f4b-93e3-bad267711f82",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "29528615-0678-433c-8ae8-9bd0f24c88f5",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/bathroom/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/bathroom/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/bathroom/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"name\":{\"type\":\"string\",\"maxLength\":256},\"order\":{\"type\":\"number\"},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"order\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/bathroom/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6959e471-773d-48d6-a926-733d98155db3",
          "name": "/v1/bathroom/create",
          "request": {
            "name": "/v1/bathroom/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "bathroom",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f6795fd6-5c5e-43c0-8271-8109b80654fb",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c9b17309-bb2f-45e1-bb11-68f42245d572",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "bff1fae0-9799-412f-894c-3316c624c6ae",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f3578f4d-2d3f-4db9-9f3d-5ada18151058",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5a8477c1-d2d3-47a6-b6c5-a38f881ac563",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/bathroom/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/bathroom/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/bathroom/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/bathroom/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8b4e935a-27b3-4434-bf4b-f03167c1dc18",
          "name": "/v1/bathroom/update/:id",
          "request": {
            "name": "/v1/bathroom/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "bathroom",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "qae4cp7xnotk3wh26dkpp7y7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3943fea8-c32e-48be-a9d3-cff6ef8a9463",
              "name": "Responds with the id of the updated bathroom.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "qae4cp7xnotk3wh26dkpp7y7",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c2c15850-d9dc-4155-a489-f959bc4ffbab",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "qae4cp7xnotk3wh26dkpp7y7",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b1ef808b-7df8-4727-a982-14be0269e3e3",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "qae4cp7xnotk3wh26dkpp7y7",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4e030ab2-f286-4911-8aaf-79c4ef2e76b6",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "qae4cp7xnotk3wh26dkpp7y7",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5762d9e2-1672-47d9-b444-5ecafd6b9dc4",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/bathroom/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/bathroom/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/bathroom/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/bathroom/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b14e8beb-0769-495a-95e5-de2a44e4e804",
          "name": "/v1/bathroom/delete/:id",
          "request": {
            "name": "/v1/bathroom/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "bathroom",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "qae4cp7xnotk3wh26dkpp7y7",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "bdec86d1-a71c-4ac1-82a6-25ba8dfc5695",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "qae4cp7xnotk3wh26dkpp7y7",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ce5afc55-527a-4689-87aa-5ff1ae54852b",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "qae4cp7xnotk3wh26dkpp7y7",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a0a4c4cc-494d-4bba-9530-5d7a6b55fbca",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "qae4cp7xnotk3wh26dkpp7y7",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c2faf4de-86a2-473c-973f-4dcc2aa55765",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "qae4cp7xnotk3wh26dkpp7y7",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "fd0a5696-a0a0-4bb6-b00e-b54e25840fec",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bathroom",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "qae4cp7xnotk3wh26dkpp7y7",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cc33b3a-f366-42ce-9318-ea4f40ffa759",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/bathroom/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/bathroom/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/bathroom/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/bathroom/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "66859660-5c7e-406d-a33c-1db70720ed67",
      "name": "bedroom",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "5478f5ed-9e04-49b9-9f00-0eee91098aa1",
          "name": "/v1/bedroom/list",
          "request": {
            "name": "/v1/bedroom/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "bedroom",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "updatedAt-desc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ff281fc0-e63e-43fb-a56a-ced15e49e0c5",
              "name": "Responds with an array of bedroom objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"labore ea sit incididunt\",\n      \"name\": \"in consectetur anim\",\n      \"order\": -3894539.451474935,\n      \"createdAt\": \"Ut\",\n      \"updatedAt\": \"nisi do\"\n    },\n    {\n      \"id\": \"consectetur irure\",\n      \"name\": \"amet consectetur sit Duis\",\n      \"order\": -53883371.626426294,\n      \"createdAt\": \"dolor tempor Ut sint\",\n      \"updatedAt\": \"cillum Excepteur sed\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "da2c12bb-befd-4e50-9163-e8e972e915af",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b9c1390e-457c-40f8-84e4-6bbb3a8a69ab",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ea2d7a9f-1a5a-4d6e-8f2f-35b69ec23c02",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/bedroom/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/bedroom/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/bedroom/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"name\":{\"type\":\"string\",\"maxLength\":256},\"order\":{\"type\":\"number\"},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"order\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/bedroom/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "3ee16ffd-6169-44ed-94ed-db6a9f74bf88",
          "name": "/v1/bedroom/create",
          "request": {
            "name": "/v1/bedroom/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "bedroom",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e30cd5fa-49c9-4eb8-be0e-1dcc1e1a0ec3",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6215f6b8-a8b4-4e19-ba51-d29e1785b0b4",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a6fae3b1-dc40-4d9c-afa0-0f070e10fd55",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e8b25083-f0ee-420b-b940-b0101a87cc36",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b90bd10d-92fd-453b-a28c-604d55971f92",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/bedroom/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/bedroom/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/bedroom/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/bedroom/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "238be223-3123-4b07-bda1-c2a2a6af022b",
          "name": "/v1/bedroom/update/:id",
          "request": {
            "name": "/v1/bedroom/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "bedroom",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "zjggk1ve17r7jmpq8dtmbjyw",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e61e2b3a-7fc1-4808-aa96-a5e3660b36eb",
              "name": "Responds with the id of the updated bedroom.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zjggk1ve17r7jmpq8dtmbjyw",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "945c74a7-5190-4d52-9fda-82e807a2d523",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zjggk1ve17r7jmpq8dtmbjyw",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f83615a3-ae62-4cf6-8e82-58dd777cd71f",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zjggk1ve17r7jmpq8dtmbjyw",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8b6f05c9-c78c-4db2-9f16-420706b53f66",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zjggk1ve17r7jmpq8dtmbjyw",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ef7de062-1dc6-4977-82a7-bfdea55f12e7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/bedroom/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/bedroom/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/bedroom/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/bedroom/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a7b48184-43c3-49f1-a0f0-4bebc519aa64",
          "name": "/v1/bedroom/delete/:id",
          "request": {
            "name": "/v1/bedroom/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "bedroom",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "zjggk1ve17r7jmpq8dtmbjyw",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ca209e99-3295-4c51-88b6-1b8d3936f353",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zjggk1ve17r7jmpq8dtmbjyw",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "78f85279-c313-43f8-b3d5-ddedd8d219f5",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zjggk1ve17r7jmpq8dtmbjyw",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c7683734-feb7-43a4-bf42-1cacbd0ce99d",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zjggk1ve17r7jmpq8dtmbjyw",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3f7ea784-6d9f-47e1-8674-83958ff99657",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zjggk1ve17r7jmpq8dtmbjyw",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "079f26a9-152b-4874-8067-a8ef73125aef",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "bedroom",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zjggk1ve17r7jmpq8dtmbjyw",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8fba0870-483a-4936-8ecd-001b8797f018",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/bedroom/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/bedroom/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/bedroom/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/bedroom/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "c0423ffb-b879-4fe3-ad6c-ab845be9c368",
      "name": "buildingFeature",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "c584fc1e-b7b9-42ff-b26b-713c84c18003",
          "name": "/v1/building-feature/list",
          "request": {
            "name": "/v1/building-feature/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "building-feature",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "updatedAt-desc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3032a1ad-82bb-40e9-8feb-6a6bfef861a9",
              "name": "Responds with an array of buildingFeature objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"labore ea sit incididunt\",\n      \"name\": \"in consectetur anim\",\n      \"order\": -3894539.451474935,\n      \"createdAt\": \"Ut\",\n      \"updatedAt\": \"nisi do\"\n    },\n    {\n      \"id\": \"consectetur irure\",\n      \"name\": \"amet consectetur sit Duis\",\n      \"order\": -53883371.626426294,\n      \"createdAt\": \"dolor tempor Ut sint\",\n      \"updatedAt\": \"cillum Excepteur sed\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6f2c07b2-01d4-4d1f-8fa5-7d8c1bac97b5",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "fc2b120e-a541-44cc-bd03-60a6937317ea",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8293e54c-ded7-4e0b-8729-7810a30c3b8b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/building-feature/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/building-feature/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/building-feature/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"name\":{\"type\":\"string\",\"maxLength\":256},\"order\":{\"type\":\"number\"},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"order\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/building-feature/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "decbcf22-3789-4d1e-8016-091db6b73f58",
          "name": "/v1/building-feature/create",
          "request": {
            "name": "/v1/building-feature/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "building-feature",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "203aa8cc-6888-4942-90d9-a8afce125ae5",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "cdc9d3d8-0089-4e41-b34f-5d56fa27cbdf",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a3af0691-8df0-49b4-906e-6a27c1f6f6bc",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2b21449e-ce3a-4ccb-8d9b-1abe6919cddf",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "69d30d04-2e93-4c8b-9af2-3076f6b67004",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/building-feature/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/building-feature/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/building-feature/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/building-feature/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "58e609ed-74ae-4212-ba82-7624e5197031",
          "name": "/v1/building-feature/update/:id",
          "request": {
            "name": "/v1/building-feature/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "building-feature",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "zsm6fam0k05blkaeoit8x09a",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9650f851-8c5b-4efa-bce2-8870b8e47600",
              "name": "Responds with the id of the updated buildingFeature.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zsm6fam0k05blkaeoit8x09a",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "79bda7fa-a41e-4641-bf01-c1a763bd035e",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zsm6fam0k05blkaeoit8x09a",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b934d85d-861e-43da-a5a9-483762224ddb",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zsm6fam0k05blkaeoit8x09a",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "96be9396-2d29-483c-b927-25b3e2d07c7d",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zsm6fam0k05blkaeoit8x09a",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a5192d4f-6718-4cf2-bd5e-e2b98029475d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/building-feature/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/building-feature/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/building-feature/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/building-feature/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0b83d91d-a073-4012-82c9-7145eac02d96",
          "name": "/v1/building-feature/delete/:id",
          "request": {
            "name": "/v1/building-feature/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "building-feature",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "zsm6fam0k05blkaeoit8x09a",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "53be0884-8549-4702-a591-64756bd786a9",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zsm6fam0k05blkaeoit8x09a",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3b78a041-a05b-403b-8d6b-5b96b9b30064",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zsm6fam0k05blkaeoit8x09a",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "54662efd-f80b-4df3-9289-71f73b25a1a5",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zsm6fam0k05blkaeoit8x09a",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e586c597-7a2a-409c-a23a-4d964e09758f",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zsm6fam0k05blkaeoit8x09a",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "fe035dd9-bbd4-4af6-a33c-d4b7a96fae0a",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zsm6fam0k05blkaeoit8x09a",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "726b94af-e39b-4a2c-a175-0828bd29a625",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/building-feature/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/building-feature/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/building-feature/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/building-feature/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "9a42cd8d-ac82-4e57-beb1-6d9bbf27d502",
      "name": "buildingFeatureToProperty",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e08348ca-e058-48cd-871c-4ec3e1c9443b",
          "name": "/v1/building-feature-to-property/features-by-item/:itemId",
          "request": {
            "name": "/v1/building-feature-to-property/features-by-item/:itemId",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "building-feature-to-property",
                "features-by-item",
                ":itemId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "hdsyi7gw3n77jrngcck1x33y",
                  "key": "itemId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e3f04473-5c9d-4ef0-9045-784806bfd146",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature-to-property",
                    "features-by-item",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"buildingFeatureId\": \"quis ut cupidatat\",\n      \"buildingFeature\": {\n        \"name\": \"cupidatat consequat\"\n      }\n    },\n    {\n      \"buildingFeatureId\": \"ipsum est reprehenderit\",\n      \"buildingFeature\": {\n        \"name\": \"ea id\"\n      }\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f01ede3e-d809-418f-972b-b0d937db3351",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature-to-property",
                    "features-by-item",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "839b0ab9-5282-4577-a017-b6de25803ec4",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature-to-property",
                    "features-by-item",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e858bf38-4a1c-462f-b177-e1930996e087",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/v1/building-feature-to-property/features-by-item/:itemId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/v1/building-feature-to-property/features-by-item/:itemId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/v1/building-feature-to-property/features-by-item/:itemId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"buildingFeatureId\":{\"type\":\"string\"},\"buildingFeature\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]}},\"required\":[\"buildingFeatureId\",\"buildingFeature\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/v1/building-feature-to-property/features-by-item/:itemId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1c952fd2-15ed-4cdd-aa94-57c1776d03b5",
          "name": "/v1/building-feature-to-property/create",
          "request": {
            "name": "/v1/building-feature-to-property/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "building-feature-to-property",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"featureId\": \"zsm6fam0k05blkaeoit8x09a\",\n  \"itemId\": \"hdsyi7gw3n77jrngcck1x33y\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5f6f6906-53ec-4030-bfc2-d92fbdb28a2d",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature-to-property",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"featureId\": \"zsm6fam0k05blkaeoit8x09a\",\n  \"itemId\": \"hdsyi7gw3n77jrngcck1x33y\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ea3587a7-d067-4bbf-8a68-9c22742f8aa3",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature-to-property",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"featureId\": \"zsm6fam0k05blkaeoit8x09a\",\n  \"itemId\": \"hdsyi7gw3n77jrngcck1x33y\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ae920e60-4104-47f7-be72-4aa82416084a",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature-to-property",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"featureId\": \"zsm6fam0k05blkaeoit8x09a\",\n  \"itemId\": \"hdsyi7gw3n77jrngcck1x33y\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c18f6830-8fd1-4fee-9918-b8cfa4da301d",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature-to-property",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"featureId\": \"zsm6fam0k05blkaeoit8x09a\",\n  \"itemId\": \"hdsyi7gw3n77jrngcck1x33y\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6a63f667-8e53-47b3-9602-beb4554a69fa",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/building-feature-to-property/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/building-feature-to-property/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/building-feature-to-property/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/building-feature-to-property/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "38b00c5f-78b8-4b6c-9df7-3e74d2063be0",
          "name": "/v1/building-feature-to-property/delete/:featureId/:itemId",
          "request": {
            "name": "/v1/building-feature-to-property/delete/:featureId/:itemId",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "building-feature-to-property",
                "delete",
                ":featureId",
                ":itemId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "zsm6fam0k05blkaeoit8x09a",
                  "key": "featureId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "hdsyi7gw3n77jrngcck1x33y",
                  "key": "itemId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "da3de8c3-25a7-45df-9ad0-41e1232822a0",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature-to-property",
                    "delete",
                    ":featureId",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zsm6fam0k05blkaeoit8x09a",
                      "key": "featureId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "605cf44f-2ca0-43c4-bb3f-1d91c4583d6b",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature-to-property",
                    "delete",
                    ":featureId",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zsm6fam0k05blkaeoit8x09a",
                      "key": "featureId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "91177154-71e6-46c9-a38d-d4d97972a3a9",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature-to-property",
                    "delete",
                    ":featureId",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zsm6fam0k05blkaeoit8x09a",
                      "key": "featureId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1fab7132-add6-418b-95ac-d4e959000af3",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "building-feature-to-property",
                    "delete",
                    ":featureId",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zsm6fam0k05blkaeoit8x09a",
                      "key": "featureId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1ffd8317-218f-4657-92f6-664274e143c7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/building-feature-to-property/delete/:featureId/:itemId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/building-feature-to-property/delete/:featureId/:itemId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/building-feature-to-property/delete/:featureId/:itemId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/building-feature-to-property/delete/:featureId/:itemId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "4577e168-3db4-4cab-a413-9bf7bab4a153",
      "name": "city",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "a1312ca7-4a09-412a-b6c3-bd5b308299cb",
          "name": "/v1/city/list",
          "request": {
            "name": "/v1/city/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "city",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "latitude-desc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Toronto\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Ottawa\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Mississauga\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"regionId\",\n      \"kj3nrb5rv094v8ns5ptz1jhc\"\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "34830375-d8fd-496d-b87f-463c95e7e198",
              "name": "Responds with an array of city objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "latitude-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Toronto\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Ottawa\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Mississauga\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"regionId\",\n      \"kj3nrb5rv094v8ns5ptz1jhc\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"ad reprehenderit in sunt dolor\",\n      \"name\": \"sint nisi enim sunt\",\n      \"latitude\": \"do Lorem\",\n      \"longitude\": \"tempor dolor non\",\n      \"regionId\": \"occaecat sint magna\",\n      \"createdAt\": \"ad sunt dolor dolore Lorem\",\n      \"updatedAt\": \"tempor do elit\"\n    },\n    {\n      \"id\": \"ex irure\",\n      \"name\": \"Duis\",\n      \"latitude\": \"Lorem proident eu in\",\n      \"longitude\": \"ipsum nostrud Duis\",\n      \"regionId\": \"cillum\",\n      \"createdAt\": \"aute Excepteur\",\n      \"updatedAt\": \"mollit qui\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8fef8363-05f4-41b6-9760-36b58c1fcbe2",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "latitude-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Toronto\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Ottawa\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Mississauga\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"regionId\",\n      \"kj3nrb5rv094v8ns5ptz1jhc\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "cf86ae54-a83a-4fc9-9cac-b06202b740c2",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "latitude-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Toronto\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Ottawa\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Mississauga\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"regionId\",\n      \"kj3nrb5rv094v8ns5ptz1jhc\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d94e9d4d-a90f-4d87-b3ca-6d590cf35328",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/city/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/city/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/city/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"name\":{\"type\":\"string\",\"maxLength\":256},\"latitude\":{\"type\":\"string\"},\"longitude\":{\"type\":\"string\"},\"regionId\":{\"type\":\"string\",\"maxLength\":128},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"latitude\",\"longitude\",\"regionId\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/city/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "9232dc73-8493-418f-991e-3f49f7d53183",
          "name": "/v1/city/create",
          "request": {
            "name": "/v1/city/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "city",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Toronto\",\n  \"regionId\": \"kj3nrb5rv094v8ns5ptz1jhc\",\n  \"latitude\": \"43.741667\",\n  \"longitude\": \"-79.373333\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8783f371-752b-4974-85e6-374c7ebe2c0c",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Toronto\",\n  \"regionId\": \"kj3nrb5rv094v8ns5ptz1jhc\",\n  \"latitude\": \"43.741667\",\n  \"longitude\": \"-79.373333\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6a3a0e83-f860-47c1-b195-cc6f8d440d51",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Toronto\",\n  \"regionId\": \"kj3nrb5rv094v8ns5ptz1jhc\",\n  \"latitude\": \"43.741667\",\n  \"longitude\": \"-79.373333\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8a052ebc-f9ec-4ee3-8684-a23644f0737c",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Toronto\",\n  \"regionId\": \"kj3nrb5rv094v8ns5ptz1jhc\",\n  \"latitude\": \"43.741667\",\n  \"longitude\": \"-79.373333\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0b0630ec-da0c-4068-bf36-edc2af025a22",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Toronto\",\n  \"regionId\": \"kj3nrb5rv094v8ns5ptz1jhc\",\n  \"latitude\": \"43.741667\",\n  \"longitude\": \"-79.373333\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8fa67284-3bfb-4673-954e-460beeab7ecb",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/city/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/city/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/city/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/city/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "58dd1525-6583-46e8-a8b7-6ade5d7dface",
          "name": "/v1/city/update/:id",
          "request": {
            "name": "/v1/city/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "city",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "dl7r7ezrt909p6bmct6avl9l",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"latitude\": \"49.2827\",\n  \"longitude\": \"-123.1207\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "370455a8-f018-4781-8923-670e4b44fe95",
              "name": "Responds with the id of the updated city.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "dl7r7ezrt909p6bmct6avl9l",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"latitude\": \"49.2827\",\n  \"longitude\": \"-123.1207\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "326eb9d3-49db-4011-93c3-33373aaa4c2a",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "dl7r7ezrt909p6bmct6avl9l",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"latitude\": \"49.2827\",\n  \"longitude\": \"-123.1207\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2ebf7194-0414-463c-b7dc-c097c6964dbf",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "dl7r7ezrt909p6bmct6avl9l",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"latitude\": \"49.2827\",\n  \"longitude\": \"-123.1207\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4a048b21-6655-4306-bfd3-e4e2832a2c19",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "dl7r7ezrt909p6bmct6avl9l",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"latitude\": \"49.2827\",\n  \"longitude\": \"-123.1207\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7a3a75c-8717-4206-8606-5d6d2fa2ad30",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/city/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/city/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/city/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/city/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "17ace8b7-8697-4d89-a499-2f7f22381feb",
          "name": "/v1/city/delete/:id",
          "request": {
            "name": "/v1/city/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "city",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "dl7r7ezrt909p6bmct6avl9l",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "80fb3b26-e0b9-4115-9452-d69bbe273632",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "dl7r7ezrt909p6bmct6avl9l",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "be8d3fd4-f0b2-408c-8d78-225bc98ba218",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "dl7r7ezrt909p6bmct6avl9l",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7cff88cd-0dc3-4f2f-8bb8-3281e95577fd",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "dl7r7ezrt909p6bmct6avl9l",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ac10f407-782d-4941-a5b9-e26d86310941",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "dl7r7ezrt909p6bmct6avl9l",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "abc43880-7c93-45a9-8035-eacab4e2e365",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "city",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "dl7r7ezrt909p6bmct6avl9l",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "65e8da0e-8e82-42d1-8646-a93790f231d9",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/city/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/city/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/city/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/city/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "c86565af-e500-4d17-9ab2-0b7c53bcc151",
      "name": "community",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "eae2468e-fe18-47b9-8fa7-fdac00b1f9bb",
          "name": "/v1/community/:id",
          "request": {
            "name": "/v1/community/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "community",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "icj3bimn4dg5v1yeu7i2frzq",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5d06e0c2-6c3c-4c9a-9688-307cc83dd27a",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"velit ipsum\",\n    \"name\": \"velit enim non in\",\n    \"score\": -58537238,\n    \"imageUrl\": \"dolore aliquip aute pariatur Duis\",\n    \"quadrant\": \"anim proident pariatur\",\n    \"sector\": \"sunt\",\n    \"ward\": \"commodo minim\",\n    \"population\": -11765653,\n    \"dwellings\": -75468322,\n    \"usedForRenting\": \"cillum ipsum nost\",\n    \"area\": \"elit do quis enim\",\n    \"density\": \"consequat laborum eu\",\n    \"averageIncome\": -430474,\n    \"lowIncome\": \"incididunt quis ex \",\n    \"immigrants\": \"consequat ipsum cillum amet\",\n    \"elevation\": 78243087,\n    \"established\": 90747755,\n    \"description\": \"aute\",\n    \"latitude\": \"consequat pariatur quis Lorem fugiat\",\n    \"longitude\": \"dolore laboris commodo aliquip\",\n    \"city\": {\n      \"name\": \"nisi ex Excepteur Lorem velit\"\n    },\n    \"communityFeatureToCommunity\": [\n      {\n        \"communityFeature\": {\n          \"name\": \"in Duis minim qui dolore\"\n        }\n      },\n      {\n        \"communityFeature\": {\n          \"name\": \"elit cillum quis est\"\n        }\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "de688b1a-258b-46c2-a07d-624fdf90e58a",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "cecc7328-104c-49d2-9cd3-bffdb2d2a510",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "709a04fa-486c-4763-83b1-d657fd3ecc11",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/v1/community/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/v1/community/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/v1/community/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"score\":{\"type\":[\"integer\",\"null\"]},\"imageUrl\":{\"type\":[\"string\",\"null\"]},\"quadrant\":{\"type\":[\"string\",\"null\"]},\"sector\":{\"type\":[\"string\",\"null\"]},\"ward\":{\"type\":[\"string\",\"null\"]},\"population\":{\"type\":[\"integer\",\"null\"]},\"dwellings\":{\"type\":[\"integer\",\"null\"]},\"usedForRenting\":{\"type\":[\"string\",\"null\"]},\"area\":{\"type\":[\"string\",\"null\"]},\"density\":{\"type\":[\"string\",\"null\"]},\"averageIncome\":{\"type\":[\"integer\",\"null\"]},\"lowIncome\":{\"type\":[\"string\",\"null\"]},\"immigrants\":{\"type\":[\"string\",\"null\"]},\"elevation\":{\"type\":[\"integer\",\"null\"]},\"established\":{\"type\":[\"integer\",\"null\"]},\"description\":{\"type\":[\"string\",\"null\"]},\"latitude\":{\"type\":\"string\"},\"longitude\":{\"type\":\"string\"},\"city\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]},\"communityFeatureToCommunity\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"communityFeature\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]}},\"required\":[\"communityFeature\"]}}},\"required\":[\"id\",\"name\",\"score\",\"imageUrl\",\"quadrant\",\"sector\",\"ward\",\"population\",\"dwellings\",\"usedForRenting\",\"area\",\"density\",\"averageIncome\",\"lowIncome\",\"immigrants\",\"elevation\",\"established\",\"description\",\"latitude\",\"longitude\",\"city\",\"communityFeatureToCommunity\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/v1/community/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "efec992c-db8c-4f09-9b68-bb2070d22a8e",
          "name": "/v1/community/list",
          "request": {
            "name": "/v1/community/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "community",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "score-desc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Community name 1\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Community name 1\"\n        ]\n      ]\n    ],\n    [\n      \"gt\",\n      \"area\",\n      3\n    ],\n    [\n      \"lt\",\n      \"population\",\n      2000\n    ],\n    [\n      \"eq\",\n      \"quadrant\",\n      \"NW\"\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "847bc959-5f8c-46dc-b334-dc8a258e4fcb",
              "name": "Responds with an array of community objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "score-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Community name 1\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Community name 1\"\n        ]\n      ]\n    ],\n    [\n      \"gt\",\n      \"area\",\n      3\n    ],\n    [\n      \"lt\",\n      \"population\",\n      2000\n    ],\n    [\n      \"eq\",\n      \"quadrant\",\n      \"NW\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"Ut\",\n      \"name\": \"culpa proident velit\",\n      \"score\": -78761634.63566944,\n      \"imageUrl\": \"do aliquip reprehenderit labore enim\",\n      \"quadrant\": \"consequat minim occaecat\",\n      \"sector\": \"elit minim\",\n      \"ward\": \"in\",\n      \"population\": 65429100.033150345,\n      \"dwellings\": -81509696.6376211,\n      \"usedForRenting\": \"mag\",\n      \"area\": \"incididunt est\",\n      \"density\": \"exercitation tempor a\",\n      \"averageIncome\": -74795442.31288391,\n      \"lowIncome\": \"ad nisi\",\n      \"immigrants\": \"fugiat pariatur aute \",\n      \"elevation\": -55575222.0656617,\n      \"established\": 7286073.224468127,\n      \"description\": \"officia\",\n      \"latitude\": \"sit elit laboris laborum cillum\",\n      \"longitude\": \"voluptate i\",\n      \"cityId\": \"ea ut eiusmod\",\n      \"createdAt\": \"Ut minim ad ullamco dolor\",\n      \"updatedAt\": \"ullamco adipisicing laborum cupidatat\"\n    },\n    {\n      \"id\": \"adipisicing dolor\",\n      \"name\": \"tem\",\n      \"score\": -60722548.535511665,\n      \"imageUrl\": \"nisi sed consequat enim\",\n      \"quadrant\": \"nostrud nisi dolore\",\n      \"sector\": \"ut minim mollit eu officia\",\n      \"ward\": \"consequat c\",\n      \"population\": -77805018.45439395,\n      \"dwellings\": -56434042.847716495,\n      \"usedForRenting\": \"irure ad officia ea\",\n      \"area\": \"minim eiu\",\n      \"density\": \"ex dolor exercitation elit tempor\",\n      \"averageIncome\": -49671150.544913135,\n      \"lowIncome\": \"fugiat irure\",\n      \"immigrants\": \"enim incididunt in\",\n      \"elevation\": -88080822.43227035,\n      \"established\": 92291248.41535586,\n      \"description\": \"exercitation c\",\n      \"latitude\": \"elit esse incididunt sunt\",\n      \"longitude\": \"nostrud\",\n      \"cityId\": \"quis esse\",\n      \"createdAt\": \"eiusmod irure\",\n      \"updatedAt\": \"laborum sint Excepteur\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "eec8ee2b-9f9e-43f1-aed9-89b80d8c947c",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "score-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Community name 1\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Community name 1\"\n        ]\n      ]\n    ],\n    [\n      \"gt\",\n      \"area\",\n      3\n    ],\n    [\n      \"lt\",\n      \"population\",\n      2000\n    ],\n    [\n      \"eq\",\n      \"quadrant\",\n      \"NW\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "98a7b5b2-3193-40ff-9c44-511d35a219c2",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "score-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Community name 1\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Community name 1\"\n        ]\n      ]\n    ],\n    [\n      \"gt\",\n      \"area\",\n      3\n    ],\n    [\n      \"lt\",\n      \"population\",\n      2000\n    ],\n    [\n      \"eq\",\n      \"quadrant\",\n      \"NW\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fcb342e6-89ad-4ed2-8aa6-7f689529e393",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/community/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/community/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/community/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"name\":{\"type\":\"string\",\"maxLength\":256},\"score\":{\"type\":[\"number\",\"null\"]},\"imageUrl\":{\"type\":[\"string\",\"null\"],\"maxLength\":256},\"quadrant\":{\"type\":[\"string\",\"null\"],\"maxLength\":32},\"sector\":{\"type\":[\"string\",\"null\"],\"maxLength\":128},\"ward\":{\"type\":[\"string\",\"null\"],\"maxLength\":64},\"population\":{\"type\":[\"number\",\"null\"]},\"dwellings\":{\"type\":[\"number\",\"null\"]},\"usedForRenting\":{\"type\":[\"string\",\"null\"]},\"area\":{\"type\":[\"string\",\"null\"]},\"density\":{\"type\":[\"string\",\"null\"]},\"averageIncome\":{\"type\":[\"number\",\"null\"]},\"lowIncome\":{\"type\":[\"string\",\"null\"]},\"immigrants\":{\"type\":[\"string\",\"null\"]},\"elevation\":{\"type\":[\"number\",\"null\"]},\"established\":{\"type\":[\"number\",\"null\"]},\"description\":{\"type\":[\"string\",\"null\"]},\"latitude\":{\"type\":\"string\"},\"longitude\":{\"type\":\"string\"},\"cityId\":{\"type\":\"string\",\"maxLength\":128},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"score\",\"imageUrl\",\"quadrant\",\"sector\",\"ward\",\"population\",\"dwellings\",\"usedForRenting\",\"area\",\"density\",\"averageIncome\",\"lowIncome\",\"immigrants\",\"elevation\",\"established\",\"description\",\"latitude\",\"longitude\",\"cityId\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/community/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e4c3000e-4dc0-470f-ba0f-36ab7f9a2719",
          "name": "/v1/community/create",
          "request": {
            "name": "/v1/community/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "community",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Community name\",\n  \"cityId\": \"dl7r7ezrt909p6bmct6avl9l\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6cb96cf3-a31b-48c2-8e47-5057ab8024cd",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Community name\",\n  \"cityId\": \"dl7r7ezrt909p6bmct6avl9l\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f07632d7-e21e-4bd0-8593-57977d57c744",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Community name\",\n  \"cityId\": \"dl7r7ezrt909p6bmct6avl9l\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "14100280-7c9c-441b-b32b-1c32cf89cc68",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Community name\",\n  \"cityId\": \"dl7r7ezrt909p6bmct6avl9l\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "11a449c2-8f1e-444d-9e17-c1768e6f615e",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Community name\",\n  \"cityId\": \"dl7r7ezrt909p6bmct6avl9l\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aab72e70-371b-4c5e-aa46-12f3603c5f6e",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/community/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/community/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/community/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/community/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "041c23e1-553f-4e25-bdfc-436929ac535d",
          "name": "/v1/community/update/:id",
          "request": {
            "name": "/v1/community/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "community",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "icj3bimn4dg5v1yeu7i2frzq",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"imageUrl\": \"https://example.com/image.jpg\",\n  \"quadrant\": \"NW\",\n  \"sector\": \"SE\",\n  \"ward\": \"Ward 1\",\n  \"population\": 1000,\n  \"dwellings\": 500,\n  \"usedForRenting\": 30.45,\n  \"area\": 3.2,\n  \"density\": 10.5,\n  \"averageIncome\": 50000\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1ccc8185-12bc-4584-83cf-fa027d34bfdc",
              "name": "Responds with the id of the updated community.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"imageUrl\": \"https://example.com/image.jpg\",\n  \"quadrant\": \"NW\",\n  \"sector\": \"SE\",\n  \"ward\": \"Ward 1\",\n  \"population\": 1000,\n  \"dwellings\": 500,\n  \"usedForRenting\": 30.45,\n  \"area\": 3.2,\n  \"density\": 10.5,\n  \"averageIncome\": 50000\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "50eacda2-5ca9-4fae-92e9-d3d4f92a29a3",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"imageUrl\": \"https://example.com/image.jpg\",\n  \"quadrant\": \"NW\",\n  \"sector\": \"SE\",\n  \"ward\": \"Ward 1\",\n  \"population\": 1000,\n  \"dwellings\": 500,\n  \"usedForRenting\": 30.45,\n  \"area\": 3.2,\n  \"density\": 10.5,\n  \"averageIncome\": 50000\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b3b8deb1-a6c7-464e-ae8c-bd69ea89f2ab",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"imageUrl\": \"https://example.com/image.jpg\",\n  \"quadrant\": \"NW\",\n  \"sector\": \"SE\",\n  \"ward\": \"Ward 1\",\n  \"population\": 1000,\n  \"dwellings\": 500,\n  \"usedForRenting\": 30.45,\n  \"area\": 3.2,\n  \"density\": 10.5,\n  \"averageIncome\": 50000\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c7f2d50e-fdc0-4b50-956a-6d747536f506",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"imageUrl\": \"https://example.com/image.jpg\",\n  \"quadrant\": \"NW\",\n  \"sector\": \"SE\",\n  \"ward\": \"Ward 1\",\n  \"population\": 1000,\n  \"dwellings\": 500,\n  \"usedForRenting\": 30.45,\n  \"area\": 3.2,\n  \"density\": 10.5,\n  \"averageIncome\": 50000\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f644ac86-866f-4e4f-8b33-43a32b7f20d1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/community/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/community/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/community/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/community/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "851d0d95-0569-4239-8a6c-456d5c1cfc3c",
          "name": "/v1/community/delete/:id",
          "request": {
            "name": "/v1/community/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "community",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "icj3bimn4dg5v1yeu7i2frzq",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2f26e69c-f2d2-45dd-9e86-32dd347f3fdb",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "45753445-78e3-4daa-b788-adbcf91dbeb4",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "19f92087-3e52-4c54-9cc6-27db1171f20a",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a71d84ea-1d03-41a9-a30d-392aed0ab545",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "96bfcd44-97cc-40cf-9954-64089d8ac360",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "43dea6f3-00d7-4588-be3d-438f22f1ddc8",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/community/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/community/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/community/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/community/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "87cf26fe-7551-45db-93be-bda67d4604ca",
      "name": "communityFeature",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3c665c2a-8196-4753-a79b-28363b607844",
          "name": "/v1/community-feature/list",
          "request": {
            "name": "/v1/community-feature/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "community-feature",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "updatedAt-desc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "61a51a12-611a-450b-8425-bf85d5c5f6c8",
              "name": "Responds with an array of communityFeature objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"labore ea sit incididunt\",\n      \"name\": \"in consectetur anim\",\n      \"order\": -3894539.451474935,\n      \"createdAt\": \"Ut\",\n      \"updatedAt\": \"nisi do\"\n    },\n    {\n      \"id\": \"consectetur irure\",\n      \"name\": \"amet consectetur sit Duis\",\n      \"order\": -53883371.626426294,\n      \"createdAt\": \"dolor tempor Ut sint\",\n      \"updatedAt\": \"cillum Excepteur sed\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d62ed2f5-7518-4b0a-9140-2872c9026512",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5d1dae14-1383-4aa5-a69f-cf66c0d00b2a",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "069e016e-b619-4496-9fbc-0f87c1b2f77a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/community-feature/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/community-feature/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/community-feature/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"name\":{\"type\":\"string\",\"maxLength\":256},\"order\":{\"type\":\"number\"},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"order\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/community-feature/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "16dcf7ed-2c99-4210-8275-46a06104c94c",
          "name": "/v1/community-feature/create",
          "request": {
            "name": "/v1/community-feature/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "community-feature",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d3f5bd74-a19c-4c6f-843c-e05cc9da2b46",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d14e661a-81c3-47cb-a5f8-61a94bc564ba",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4991eac0-bb73-42ec-87a9-d768d0814ba4",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "16ccfce1-170f-444c-9fc0-a3c41f083726",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "14a87b8f-dd29-4f9b-8269-70342ed2fd76",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/community-feature/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/community-feature/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/community-feature/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/community-feature/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f4c5db71-c0a4-4060-93cd-877d87dae7fb",
          "name": "/v1/community-feature/update/:id",
          "request": {
            "name": "/v1/community-feature/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "community-feature",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "cwswfax9454xpaxcym2la262",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "595e5a35-4b6c-445c-a3ac-224582d60366",
              "name": "Responds with the id of the updated communityFeature.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "cwswfax9454xpaxcym2la262",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f525f93c-8de4-4265-a1a6-d2a294e27b7b",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "cwswfax9454xpaxcym2la262",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c6393b08-ca2a-4ce9-b339-6a6f235b40c6",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "cwswfax9454xpaxcym2la262",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "265fa37a-09f3-42d5-b93d-d626b24290c2",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "cwswfax9454xpaxcym2la262",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "071b1fa0-a1e4-48be-8813-2c551d981a33",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/community-feature/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/community-feature/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/community-feature/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/community-feature/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "95c36008-229e-48c3-8a54-579f8b63c641",
          "name": "/v1/community-feature/delete/:id",
          "request": {
            "name": "/v1/community-feature/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "community-feature",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "cwswfax9454xpaxcym2la262",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "40a25f71-1c98-43b0-981d-cf6817e2653c",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "cwswfax9454xpaxcym2la262",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "94b707b8-fd24-4f0c-9df1-5f7a1bbec458",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "cwswfax9454xpaxcym2la262",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "771f5beb-f0e4-4f19-992b-7bb4e341d78e",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "cwswfax9454xpaxcym2la262",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b5e1951d-9616-4a19-b146-57855b6c1908",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "cwswfax9454xpaxcym2la262",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4881ff61-a103-48ff-88ff-59d5bb586248",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "cwswfax9454xpaxcym2la262",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dffc8d2d-5a7b-4f4f-8d57-ebc76779c027",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/community-feature/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/community-feature/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/community-feature/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/community-feature/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "6befff2f-86a2-4d7f-acee-d7ef92625d28",
      "name": "communityFeatureToCommunity",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "8dc5e5d6-1134-4fcd-92dc-a2e845dbc1b4",
          "name": "/v1/community-feature-to-community/features-by-item/:itemId",
          "request": {
            "name": "/v1/community-feature-to-community/features-by-item/:itemId",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "community-feature-to-community",
                "features-by-item",
                ":itemId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "icj3bimn4dg5v1yeu7i2frzq",
                  "key": "itemId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "095389f2-6b8c-4a6d-834b-d3142a0057d3",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature-to-community",
                    "features-by-item",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"communityFeatureId\": \"sed anim\",\n      \"communityFeature\": {\n        \"name\": \"ex\"\n      }\n    },\n    {\n      \"communityFeatureId\": \"enim in\",\n      \"communityFeature\": {\n        \"name\": \"sint quis est\"\n      }\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "440fbfcf-1c53-4666-a71b-91b559256151",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature-to-community",
                    "features-by-item",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "14600ba1-7b3d-4806-ab7d-bf15236425a2",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature-to-community",
                    "features-by-item",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b7ff2f8e-b3cf-40e3-98f4-ca01897bc185",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/v1/community-feature-to-community/features-by-item/:itemId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/v1/community-feature-to-community/features-by-item/:itemId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/v1/community-feature-to-community/features-by-item/:itemId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"communityFeatureId\":{\"type\":\"string\"},\"communityFeature\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]}},\"required\":[\"communityFeatureId\",\"communityFeature\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/v1/community-feature-to-community/features-by-item/:itemId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5a11e904-e74a-47d4-9fb7-85e04c109401",
          "name": "/v1/community-feature-to-community/create",
          "request": {
            "name": "/v1/community-feature-to-community/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "community-feature-to-community",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"featureId\": \"cwswfax9454xpaxcym2la262\",\n  \"itemId\": \"icj3bimn4dg5v1yeu7i2frzq\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "cd7e98f3-d9f9-4cf6-9e2e-24a680b2874e",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature-to-community",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"featureId\": \"cwswfax9454xpaxcym2la262\",\n  \"itemId\": \"icj3bimn4dg5v1yeu7i2frzq\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "66a82e18-32b7-465f-9749-26ccf94e9234",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature-to-community",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"featureId\": \"cwswfax9454xpaxcym2la262\",\n  \"itemId\": \"icj3bimn4dg5v1yeu7i2frzq\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b61bd726-9dba-41dc-91da-9642d79ebe74",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature-to-community",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"featureId\": \"cwswfax9454xpaxcym2la262\",\n  \"itemId\": \"icj3bimn4dg5v1yeu7i2frzq\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5af2886e-0ac3-48d3-bac8-12bb1f87eae4",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature-to-community",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"featureId\": \"cwswfax9454xpaxcym2la262\",\n  \"itemId\": \"icj3bimn4dg5v1yeu7i2frzq\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4843bcf5-48bf-4220-a6d2-f93826acf433",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/community-feature-to-community/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/community-feature-to-community/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/community-feature-to-community/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/community-feature-to-community/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2905fd01-0982-450b-93d1-487c812adf56",
          "name": "/v1/community-feature-to-community/delete/:featureId/:itemId",
          "request": {
            "name": "/v1/community-feature-to-community/delete/:featureId/:itemId",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "community-feature-to-community",
                "delete",
                ":featureId",
                ":itemId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "cwswfax9454xpaxcym2la262",
                  "key": "featureId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "icj3bimn4dg5v1yeu7i2frzq",
                  "key": "itemId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ba82dd5b-dcc2-43b4-93ad-ac34ff0936fe",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature-to-community",
                    "delete",
                    ":featureId",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "cwswfax9454xpaxcym2la262",
                      "key": "featureId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "92a16f61-f158-401e-9e23-977c4d937b41",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature-to-community",
                    "delete",
                    ":featureId",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "cwswfax9454xpaxcym2la262",
                      "key": "featureId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "27475625-deaa-4e1f-bbc0-b7f162e5c734",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature-to-community",
                    "delete",
                    ":featureId",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "cwswfax9454xpaxcym2la262",
                      "key": "featureId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "27e00ce9-e9ad-4e91-b533-c04a66c1c50e",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "community-feature-to-community",
                    "delete",
                    ":featureId",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "cwswfax9454xpaxcym2la262",
                      "key": "featureId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "icj3bimn4dg5v1yeu7i2frzq",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e8dec486-ef25-43e0-8830-6cada1108dc0",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/community-feature-to-community/delete/:featureId/:itemId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/community-feature-to-community/delete/:featureId/:itemId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/community-feature-to-community/delete/:featureId/:itemId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/community-feature-to-community/delete/:featureId/:itemId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "8c94f573-b473-4392-a7ce-149fda0e65a3",
      "name": "feature",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e9df24dc-bf50-4c97-baee-1a4e5beb523b",
          "name": "/v1/feature/list",
          "request": {
            "name": "/v1/feature/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "feature",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "updatedAt-desc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "941f0162-2f3b-4e5c-8cd6-8a5faa585940",
              "name": "Responds with an array of feature objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"labore ea sit incididunt\",\n      \"name\": \"in consectetur anim\",\n      \"order\": -3894539.451474935,\n      \"createdAt\": \"Ut\",\n      \"updatedAt\": \"nisi do\"\n    },\n    {\n      \"id\": \"consectetur irure\",\n      \"name\": \"amet consectetur sit Duis\",\n      \"order\": -53883371.626426294,\n      \"createdAt\": \"dolor tempor Ut sint\",\n      \"updatedAt\": \"cillum Excepteur sed\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e8ace511-ce55-42cd-93df-7b64cc846ebd",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c60193fa-79cf-4580-ae12-04aa5548e8b9",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "eb780cad-e43c-438f-ad00-7f8ad59da61a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/feature/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/feature/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/feature/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"name\":{\"type\":\"string\",\"maxLength\":256},\"order\":{\"type\":\"number\"},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"order\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/feature/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "bdfb4260-80ed-4f13-abef-b797c4b4e1de",
          "name": "/v1/feature/create",
          "request": {
            "name": "/v1/feature/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "feature",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d8155dd9-adc9-4e75-b83b-05137cf2ede8",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7085ca04-111a-4a48-8b53-2dfda5229038",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4bc53846-c689-4501-81da-f7ea5fbfabb5",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6fc772c5-5e5c-4944-b7d1-d994919e2ac0",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "40c0ecbd-ffec-4431-a793-9dd5485ff3af",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/feature/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/feature/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/feature/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/feature/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8c8a50c9-0f03-4a7d-a831-d7dedf650093",
          "name": "/v1/feature/update/:id",
          "request": {
            "name": "/v1/feature/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "feature",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "i53gzgu35snbfwuc94hsivb3",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "df3b52eb-9fa9-4377-a0b8-ee444c48af4d",
              "name": "Responds with the id of the updated feature.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "i53gzgu35snbfwuc94hsivb3",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "202dc1be-430c-4aa2-a9ce-2f71e59e42cf",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "i53gzgu35snbfwuc94hsivb3",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "770b7ac0-82ca-4b2e-ae13-9e95365ef408",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "i53gzgu35snbfwuc94hsivb3",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "765f0c09-b18e-4b5a-9603-b4c949f515b5",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "i53gzgu35snbfwuc94hsivb3",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "93557f26-8bf0-4050-9560-cbd24e5d4f26",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/feature/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/feature/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/feature/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/feature/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "114d29d9-d0e2-4d93-9b07-cb8c6160c5d2",
          "name": "/v1/feature/delete/:id",
          "request": {
            "name": "/v1/feature/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "feature",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "i53gzgu35snbfwuc94hsivb3",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1cff78a1-a554-4b48-b2fb-b2c759e99c87",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "i53gzgu35snbfwuc94hsivb3",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9f194717-8ac5-4b3d-bb49-bf25addb573a",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "i53gzgu35snbfwuc94hsivb3",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c9d9dd5e-3eeb-4868-9b2b-409508692e28",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "i53gzgu35snbfwuc94hsivb3",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "032182c3-b78b-48f1-b7de-69bd0042ec28",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "i53gzgu35snbfwuc94hsivb3",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "94621f04-2ff9-46e6-8b5b-2e5257406742",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "i53gzgu35snbfwuc94hsivb3",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dc892b48-dffe-4f15-b662-db31392a0ec2",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/feature/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/feature/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/feature/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/feature/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "523d995a-5ab7-462c-a180-a3f4e6b25def",
      "name": "featureToProperty",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1dbf37ba-a9c4-4e98-afd2-4d2a763bef25",
          "name": "/v1/feature-to-property/features-by-item/:itemId",
          "request": {
            "name": "/v1/feature-to-property/features-by-item/:itemId",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "feature-to-property",
                "features-by-item",
                ":itemId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "hdsyi7gw3n77jrngcck1x33y",
                  "key": "itemId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ba38ad3b-f8af-40c7-841f-8c25a78ccf90",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature-to-property",
                    "features-by-item",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"featureId\": \"cupidatat tempor v\",\n      \"feature\": {\n        \"name\": \"incididunt elit tempor\"\n      }\n    },\n    {\n      \"featureId\": \"aliquip in sunt reprehenderit\",\n      \"feature\": {\n        \"name\": \"aliqua adipisicing quis\"\n      }\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5b91af7d-165e-4652-906a-8b9843bb8c83",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature-to-property",
                    "features-by-item",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5b873f70-a043-43a7-ab85-8bd6b554562e",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature-to-property",
                    "features-by-item",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57ddee9b-8d4d-4e62-98c5-83dbb18123b9",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/v1/feature-to-property/features-by-item/:itemId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/v1/feature-to-property/features-by-item/:itemId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/v1/feature-to-property/features-by-item/:itemId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"featureId\":{\"type\":\"string\"},\"feature\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]}},\"required\":[\"featureId\",\"feature\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/v1/feature-to-property/features-by-item/:itemId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "899dd29e-84c8-4c1a-ae85-2477d94303ae",
          "name": "/v1/feature-to-property/create",
          "request": {
            "name": "/v1/feature-to-property/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "feature-to-property",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"featureId\": \"i53gzgu35snbfwuc94hsivb3\",\n  \"itemId\": \"hdsyi7gw3n77jrngcck1x33y\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4fad976e-9027-4dec-ba7e-bcf6a99125d8",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature-to-property",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"featureId\": \"i53gzgu35snbfwuc94hsivb3\",\n  \"itemId\": \"hdsyi7gw3n77jrngcck1x33y\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b3a7906a-2aee-4d7f-92a2-081338ad6d0b",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature-to-property",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"featureId\": \"i53gzgu35snbfwuc94hsivb3\",\n  \"itemId\": \"hdsyi7gw3n77jrngcck1x33y\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7752d80d-e9e7-4990-9d3e-7fa87483c22a",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature-to-property",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"featureId\": \"i53gzgu35snbfwuc94hsivb3\",\n  \"itemId\": \"hdsyi7gw3n77jrngcck1x33y\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "adb466f3-fa08-407d-8562-3b5fe5c497c8",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature-to-property",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"featureId\": \"i53gzgu35snbfwuc94hsivb3\",\n  \"itemId\": \"hdsyi7gw3n77jrngcck1x33y\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "db4b627c-6b0b-46da-a147-910ea81effa7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/feature-to-property/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/feature-to-property/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/feature-to-property/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/feature-to-property/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "cf094f63-c5ea-429e-9c58-1abfb0f96f4f",
          "name": "/v1/feature-to-property/delete/:featureId/:itemId",
          "request": {
            "name": "/v1/feature-to-property/delete/:featureId/:itemId",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "feature-to-property",
                "delete",
                ":featureId",
                ":itemId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "i53gzgu35snbfwuc94hsivb3",
                  "key": "featureId"
                },
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "hdsyi7gw3n77jrngcck1x33y",
                  "key": "itemId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7e0934b8-70a8-4ac9-b6fd-ae3d962a5c20",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature-to-property",
                    "delete",
                    ":featureId",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "i53gzgu35snbfwuc94hsivb3",
                      "key": "featureId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "76d7a509-89f8-4079-8f50-c646e9e883db",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature-to-property",
                    "delete",
                    ":featureId",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "i53gzgu35snbfwuc94hsivb3",
                      "key": "featureId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8260aa15-294f-48c4-980b-4521294dbb2e",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature-to-property",
                    "delete",
                    ":featureId",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "i53gzgu35snbfwuc94hsivb3",
                      "key": "featureId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b4a0982b-6b03-4c1f-82ed-ce219a2f83cc",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "feature-to-property",
                    "delete",
                    ":featureId",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "i53gzgu35snbfwuc94hsivb3",
                      "key": "featureId"
                    },
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7e5f3612-9a7f-4cc1-8afb-ed9569b450bf",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/feature-to-property/delete/:featureId/:itemId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/feature-to-property/delete/:featureId/:itemId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/feature-to-property/delete/:featureId/:itemId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/feature-to-property/delete/:featureId/:itemId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "84f17aeb-4d01-4d1c-8e4e-4565be80df9d",
      "name": "floorPlan",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "89b65225-2e98-44f5-a28e-33d61c25a4db",
          "name": "/v1/floor-plan/list",
          "request": {
            "name": "/v1/floor-plan/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "floor-plan",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "id-desc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Floor Plan 1\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Floor Plan 2\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"propertyId\",\n      \"hdsyi7gw3n77jrngcck1x33y\"\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3456aee6-0ac9-4a50-9f24-6e40593fb2f7",
              "name": "Responds with an array of floorPlan objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "id-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Floor Plan 1\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Floor Plan 2\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"propertyId\",\n      \"hdsyi7gw3n77jrngcck1x33y\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"velit tempor sunt nulla\",\n      \"name\": \"do in in\",\n      \"propertyId\": \"ipsum dolor exer\",\n      \"order\": -48044694.62502547,\n      \"createdAt\": \"aute adipisicing sunt reprehenderit ut\",\n      \"updatedAt\": \"ipsum tempor Duis cillum\"\n    },\n    {\n      \"id\": \"eu Duis\",\n      \"name\": \"eiusmod in ad\",\n      \"propertyId\": \"irure sint\",\n      \"order\": 44968810.76397562,\n      \"createdAt\": \"voluptate adipisicing non et\",\n      \"updatedAt\": \"sunt ut velit\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7b0a11b6-78a5-4bb4-a726-4d138641db92",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "id-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Floor Plan 1\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Floor Plan 2\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"propertyId\",\n      \"hdsyi7gw3n77jrngcck1x33y\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6d4ff124-03ee-4b97-9cd3-f811fa853775",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "id-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Floor Plan 1\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Floor Plan 2\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"propertyId\",\n      \"hdsyi7gw3n77jrngcck1x33y\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0fb6517-8539-4a0b-af1d-51877526c6a1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/floor-plan/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/floor-plan/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/floor-plan/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"name\":{\"type\":\"string\",\"maxLength\":256},\"propertyId\":{\"type\":\"string\",\"maxLength\":128},\"order\":{\"type\":\"number\"},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"propertyId\",\"order\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/floor-plan/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "079ecb6e-fbb2-44e1-aa39-770a06bb22e4",
          "name": "/v1/floor-plan/create",
          "request": {
            "name": "/v1/floor-plan/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "floor-plan",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Floor Plan 1\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"order\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "00549eae-d322-4d38-aa33-32317fe6ca39",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Floor Plan 1\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"order\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5c63d7ae-28d5-431a-a460-5d14e7fff607",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Floor Plan 1\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"order\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "30ab4f53-fa8f-4113-b104-2d45676c584c",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Floor Plan 1\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"order\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a4c46e5a-b97a-4bbf-b16b-7a9c619ea071",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Floor Plan 1\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"order\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ac1cae9-5806-4092-988d-9d25d6ec4109",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/floor-plan/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/floor-plan/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/floor-plan/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/floor-plan/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "0039b170-aeea-4767-89d2-aa19c17731d9",
          "name": "/v1/floor-plan/update/:id",
          "request": {
            "name": "/v1/floor-plan/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "floor-plan",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "fe897wto8ribvu9024zvfvxp",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Floor Plan 2\",\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7d8075ee-40a5-44b0-af2c-6a5fdb91e183",
              "name": "Responds with the id of the updated floorPlan.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "fe897wto8ribvu9024zvfvxp",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Floor Plan 2\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a0b0c9d1-b0d0-4620-978e-e5878fc519ca",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "fe897wto8ribvu9024zvfvxp",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Floor Plan 2\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "fe8614c7-7290-485c-9040-dad1131dfa03",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "fe897wto8ribvu9024zvfvxp",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Floor Plan 2\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0fec702c-38c3-4781-ae18-1ab98bf0e11e",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "fe897wto8ribvu9024zvfvxp",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Floor Plan 2\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dfbf49f5-77d0-4f34-b499-6f0eca41ce5d",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/floor-plan/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/floor-plan/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/floor-plan/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/floor-plan/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "04ae357f-b5a3-4189-af1a-1896c6ba11da",
          "name": "/v1/floor-plan/delete/:id",
          "request": {
            "name": "/v1/floor-plan/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "floor-plan",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "fe897wto8ribvu9024zvfvxp",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "710857bc-2996-44c0-8679-c8d48e0e34c4",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "fe897wto8ribvu9024zvfvxp",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e1e5119e-124d-400d-9440-2e0828157f37",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "fe897wto8ribvu9024zvfvxp",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ddb2d54e-faac-4df5-a5ff-00a768b2cebb",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "fe897wto8ribvu9024zvfvxp",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6efe9bf6-c9d4-4228-a97d-e75221da32c5",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "fe897wto8ribvu9024zvfvxp",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c9d19b84-af8c-4e54-885e-8b9452fc792e",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "floor-plan",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "fe897wto8ribvu9024zvfvxp",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6434c54-a5e3-4ce5-8261-1034ee036479",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/floor-plan/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/floor-plan/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/floor-plan/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/floor-plan/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "7c7a4006-a712-438e-a3a4-9a621c35844f",
      "name": "media",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "7c60f306-ff38-4eea-b9c1-5496302c6040",
          "name": "/v1/media/list",
          "request": {
            "name": "/v1/media/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "media",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "propertyId-asc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"assetId\",\n          \"a344xpp1\"\n        ],\n        [\n          \"eq\",\n          \"assetId\",\n          \"a344xpp2\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"mediaTypeId\",\n      \"kaeu5o03h4ihq1zoxzb19l92\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-23T00:00:00.000Z\",\n      \"2024-02-12T00:00:00.000Z\"\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c0ec6482-1bde-4698-9fb1-60316cff6eaa",
              "name": "Responds with an array of media objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "propertyId-asc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"assetId\",\n          \"a344xpp1\"\n        ],\n        [\n          \"eq\",\n          \"assetId\",\n          \"a344xpp2\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"mediaTypeId\",\n      \"kaeu5o03h4ihq1zoxzb19l92\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-23T00:00:00.000Z\",\n      \"2024-02-12T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"ipsum incididunt deserunt aliquip ut\",\n      \"assetId\": \"ea adipisicing in aliq\",\n      \"mediaTypeId\": \"nostrud ipsum ex\",\n      \"propertyId\": \"do\",\n      \"order\": -64405467.477677144,\n      \"createdAt\": \"enim\",\n      \"updatedAt\": \"consectetur enim\"\n    },\n    {\n      \"id\": \"eiusmod sed\",\n      \"assetId\": \"exerc\",\n      \"mediaTypeId\": \"enim voluptate do quis veniam\",\n      \"propertyId\": \"nisi consectet\",\n      \"order\": 21972950.892332837,\n      \"createdAt\": \"ut sunt cupidatat consectetur\",\n      \"updatedAt\": \"aute\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "52140235-d6c9-42ae-ba92-28c0550f260b",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "propertyId-asc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"assetId\",\n          \"a344xpp1\"\n        ],\n        [\n          \"eq\",\n          \"assetId\",\n          \"a344xpp2\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"mediaTypeId\",\n      \"kaeu5o03h4ihq1zoxzb19l92\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-23T00:00:00.000Z\",\n      \"2024-02-12T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7a01f421-d5c9-4808-80d8-7a4caa3083b2",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "propertyId-asc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"assetId\",\n          \"a344xpp1\"\n        ],\n        [\n          \"eq\",\n          \"assetId\",\n          \"a344xpp2\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"mediaTypeId\",\n      \"kaeu5o03h4ihq1zoxzb19l92\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-23T00:00:00.000Z\",\n      \"2024-02-12T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "23257217-a6a6-4a3f-8f13-a1f89f9fa27f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/media/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/media/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/media/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"assetId\":{\"type\":\"string\",\"maxLength\":256},\"mediaTypeId\":{\"type\":\"string\",\"maxLength\":128},\"propertyId\":{\"type\":\"string\",\"maxLength\":128},\"order\":{\"type\":\"number\"},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"assetId\",\"mediaTypeId\",\"propertyId\",\"order\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/media/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "5449dbfc-ff2c-4f04-9757-b0a0ed538dd2",
          "name": "/v1/media/create",
          "request": {
            "name": "/v1/media/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "media",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assetId\": \"a344xpp1\",\n  \"mediaTypeId\": \"kaeu5o03h4ihq1zoxzb19l92\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"order\": 0\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "84d57e88-6ec3-49e6-a2b1-ea5f470e0379",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"assetId\": \"a344xpp1\",\n  \"mediaTypeId\": \"kaeu5o03h4ihq1zoxzb19l92\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"order\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1b219612-47af-4e73-af09-7b93a1f004e1",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"assetId\": \"a344xpp1\",\n  \"mediaTypeId\": \"kaeu5o03h4ihq1zoxzb19l92\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"order\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b9cd195a-dea7-422e-91b7-b8c8d2ee32c4",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"assetId\": \"a344xpp1\",\n  \"mediaTypeId\": \"kaeu5o03h4ihq1zoxzb19l92\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"order\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c1ca36d8-edec-4200-9485-1e01f28ea960",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"assetId\": \"a344xpp1\",\n  \"mediaTypeId\": \"kaeu5o03h4ihq1zoxzb19l92\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"order\": 0\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fd88e407-7764-4989-8781-3c53625f13eb",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/media/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/media/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/media/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/media/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "ecc7d2b7-68a0-407a-bb52-a690c7ecf657",
          "name": "/v1/media/update/:id",
          "request": {
            "name": "/v1/media/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "media",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "h8e874h63772amg892ajzbo6",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "77c16d5c-40da-4e90-94d2-4e6b15cb6d80",
              "name": "Responds with the id of the updated media.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "h8e874h63772amg892ajzbo6",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b31b1823-f16b-4e35-a94e-91fcf1d33a2f",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "h8e874h63772amg892ajzbo6",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "03caecb6-b212-4178-9b79-8450ebd2a3dd",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "h8e874h63772amg892ajzbo6",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5e0787f5-98e1-4395-8f23-75d985bce0c2",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "h8e874h63772amg892ajzbo6",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "722f1293-809b-4077-a36b-c23d7827bc71",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/media/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/media/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/media/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/media/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2137f52a-11b5-4e1a-b9cb-76dc5a9219f4",
          "name": "/v1/media/delete/:id",
          "request": {
            "name": "/v1/media/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "media",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "h8e874h63772amg892ajzbo6",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "769d75eb-009b-460b-b765-4d1793e67355",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "h8e874h63772amg892ajzbo6",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9fcc633b-c211-455e-b27a-f3f536c99b21",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "h8e874h63772amg892ajzbo6",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a7cf1e71-9137-460c-9076-9b73251e271d",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "h8e874h63772amg892ajzbo6",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "15361fbd-fbee-4e68-841d-4b663d18aaa9",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "h8e874h63772amg892ajzbo6",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "00c55727-adef-47ff-ae12-cd5db65e911b",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "h8e874h63772amg892ajzbo6",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4e4c7e02-aedf-4a85-8678-286df4a5a027",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/media/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/media/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/media/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/media/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "d5c83d96-ab4c-48b5-9d2e-8b904135dbad",
      "name": "mediaType",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "e5e325ff-bf46-4caf-831a-c9dc42fa796b",
          "name": "/v1/media-type/list",
          "request": {
            "name": "/v1/media-type/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "media-type",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "updatedAt-desc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"video\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"image\"\n        ]\n      ]\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-23T00:00:00.000Z\",\n      \"2024-02-12T00:00:00.000Z\"\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "75c36bbf-2df2-4f78-94f5-41fe52a3345e",
              "name": "Responds with an array of mediaType objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"video\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"image\"\n        ]\n      ]\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-23T00:00:00.000Z\",\n      \"2024-02-12T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"voluptate laborum\",\n      \"name\": \"elit est Excepteur non et\",\n      \"createdAt\": \"qui nisi consequat aliqua\",\n      \"updatedAt\": \"velit exercitation\"\n    },\n    {\n      \"id\": \"aute ipsum\",\n      \"name\": \"anim qui laborum Excepteur ullamco\",\n      \"createdAt\": \"labo\",\n      \"updatedAt\": \"est in\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4265a939-698e-4edf-8616-bdcfbce5ed29",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"video\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"image\"\n        ]\n      ]\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-23T00:00:00.000Z\",\n      \"2024-02-12T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "841f7fa9-782a-468b-ade0-7d9cc89be757",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"video\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"image\"\n        ]\n      ]\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-23T00:00:00.000Z\",\n      \"2024-02-12T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "73bf5780-e8e8-45b9-af46-2012e6d7a88a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/media-type/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/media-type/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/media-type/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"name\":{\"type\":\"string\",\"maxLength\":256},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/media-type/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7371c77f-b5d9-4515-a661-ac8bfcb6f44f",
          "name": "/v1/media-type/create",
          "request": {
            "name": "/v1/media-type/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "media-type",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"postman test media type\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5617b5b7-0747-4757-b199-47cba5c23870",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"postman test media type\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c9a1aca9-5f4b-4ef6-8326-96574aa090a3",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"postman test media type\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6607ca1a-2316-4a22-8fb8-afe8d4410bc9",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"postman test media type\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a69c3800-d306-48e3-86a2-8611a3276e59",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"postman test media type\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1f1192b5-fa35-4c9e-a340-5925df8d914b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/media-type/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/media-type/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/media-type/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/media-type/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "04207aab-0757-4d47-8f06-fcaa034a04d4",
          "name": "/v1/media-type/update/:id",
          "request": {
            "name": "/v1/media-type/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "media-type",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "kaeu5o03h4ihq1zoxzb19l92",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"postman test media type update\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c542beeb-ca63-49f8-964d-a708b3c72e19",
              "name": "Responds with the id of the updated mediaType.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kaeu5o03h4ihq1zoxzb19l92",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"postman test media type update\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9528d718-8916-4238-86fd-715210d3f951",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kaeu5o03h4ihq1zoxzb19l92",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"postman test media type update\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f85e5161-008e-4450-b7e1-8d8b2f917104",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kaeu5o03h4ihq1zoxzb19l92",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"postman test media type update\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ab7bf88d-d7da-4390-a947-04abcd1ba658",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kaeu5o03h4ihq1zoxzb19l92",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"postman test media type update\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b48813fa-f981-4c8e-b46d-e37c87a1c4af",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/media-type/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/media-type/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/media-type/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/media-type/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "a0a0efad-dbc0-4b32-9142-7a81e268f84f",
          "name": "/v1/media-type/delete/:id",
          "request": {
            "name": "/v1/media-type/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "media-type",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "kaeu5o03h4ihq1zoxzb19l92",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "7d4f93a1-82fe-4986-a9ba-ca570c647b81",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kaeu5o03h4ihq1zoxzb19l92",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c0326dfd-64f8-4f6b-820e-d4e0a21fc3b2",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kaeu5o03h4ihq1zoxzb19l92",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b3344716-e1cc-4bea-bf2a-59f25a0a75d3",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kaeu5o03h4ihq1zoxzb19l92",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "97dbe2ee-ee61-4149-b4c1-04dfef05f17b",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kaeu5o03h4ihq1zoxzb19l92",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d359c968-be1b-4155-8590-7ec8f3591e74",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "media-type",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kaeu5o03h4ihq1zoxzb19l92",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "44da1120-24a7-4c8e-8a00-4f48c89fa299",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/media-type/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/media-type/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/media-type/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/media-type/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "5d9ab818-6cc6-4478-bcde-d41e536ae092",
      "name": "parking",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "246793ff-b941-4781-8fd0-ec8dd2db34e7",
          "name": "/v1/parking/parkings-by-property/:itemId",
          "request": {
            "name": "/v1/parking/parkings-by-property/:itemId",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "parking",
                "parkings-by-property",
                ":itemId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "hdsyi7gw3n77jrngcck1x33y",
                  "key": "itemId"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "fddd8460-71ef-4998-9c75-22bd34f804e4",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "parkings-by-property",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"enim dolor dolore consequat\",\n      \"name\": \"id\",\n      \"fee\": -43488463,\n      \"feeInterval\": \"Duis velit sint\",\n      \"order\": -80007205\n    },\n    {\n      \"id\": \"aliqua amet est ullamco dolore\",\n      \"name\": \"anim amet esse\",\n      \"fee\": -39340069,\n      \"feeInterval\": \"ut occaecat ipsum esse sed\",\n      \"order\": 63652447\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8bc8a792-2b2c-4b1b-8f49-09c795eb27a1",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "parkings-by-property",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5c854bd6-e864-4d87-8b50-77d749ae099a",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "parkings-by-property",
                    ":itemId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "itemId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "25348e09-273e-4f85-907c-4a7ff9b6e4c1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/v1/parking/parkings-by-property/:itemId - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/v1/parking/parkings-by-property/:itemId - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/v1/parking/parkings-by-property/:itemId - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"fee\":{\"type\":[\"integer\",\"null\"]},\"feeInterval\":{\"type\":[\"string\",\"null\"]},\"order\":{\"type\":\"integer\"}},\"required\":[\"id\",\"name\",\"fee\",\"feeInterval\",\"order\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/v1/parking/parkings-by-property/:itemId - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f8e17a97-4d61-4877-ad3c-1813576ff211",
          "name": "/v1/parking/list",
          "request": {
            "name": "/v1/parking/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "parking",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "name-desc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Outdoor\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Covered\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"eq\",\n      \"fee\",\n      100\n    ],\n    [\n      \"eq\",\n      \"feeInterval\",\n      \"monthly\"\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "52558092-0ced-4a7e-bb30-be59e12d2a08",
              "name": "Responds with an array of parking objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "name-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Outdoor\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Covered\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"eq\",\n      \"fee\",\n      100\n    ],\n    [\n      \"eq\",\n      \"feeInterval\",\n      \"monthly\"\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"minim nostrud\",\n      \"name\": \"aliquip incididunt\",\n      \"propertyId\": \"esse reprehen\",\n      \"fee\": -17701696.94873056,\n      \"feeInterval\": \"laboris est qui\",\n      \"order\": -10360327.006888777,\n      \"createdAt\": \"dol\",\n      \"updatedAt\": \"laboris labore Duis\"\n    },\n    {\n      \"id\": \"anim ullamco\",\n      \"name\": \"Excepteur ex anim\",\n      \"propertyId\": \"in ad\",\n      \"fee\": 48061696.06413576,\n      \"feeInterval\": \"magna vo\",\n      \"order\": 70968132.41675329,\n      \"createdAt\": \"id ea amet\",\n      \"updatedAt\": \"in id nostrud reprehenderit\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2926264f-d4ff-43d3-b482-be89b52c6b60",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "name-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Outdoor\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Covered\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"eq\",\n      \"fee\",\n      100\n    ],\n    [\n      \"eq\",\n      \"feeInterval\",\n      \"monthly\"\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "64bd8496-6127-488d-806a-af3c73099892",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "name-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Outdoor\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Covered\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"eq\",\n      \"fee\",\n      100\n    ],\n    [\n      \"eq\",\n      \"feeInterval\",\n      \"monthly\"\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1d6d29c0-030b-4116-842a-658f34ed3587",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/parking/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/parking/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/parking/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"name\":{\"type\":\"string\",\"maxLength\":256},\"propertyId\":{\"type\":\"string\",\"maxLength\":128},\"fee\":{\"type\":[\"number\",\"null\"]},\"feeInterval\":{\"type\":[\"string\",\"null\"],\"maxLength\":128},\"order\":{\"type\":\"number\"},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"propertyId\",\"fee\",\"feeInterval\",\"order\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/parking/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "8aebaa1b-e11a-4660-9e4d-3b727c344930",
          "name": "/v1/parking/create",
          "request": {
            "name": "/v1/parking/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "parking",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Covered\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"fee\": 100,\n  \"feeInterval\": \"monthly\",\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d044060f-43ea-4368-a82c-59e033b1d482",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Covered\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"fee\": 100,\n  \"feeInterval\": \"monthly\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d4af7d3a-b053-4b13-ae7a-3904b3ce6150",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Covered\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"fee\": 100,\n  \"feeInterval\": \"monthly\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "31626e2b-ad8d-4721-9a0c-02cd03cd70df",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Covered\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"fee\": 100,\n  \"feeInterval\": \"monthly\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1c9158bc-3a76-41e0-b7f4-078127ad4782",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Covered\",\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"fee\": 100,\n  \"feeInterval\": \"monthly\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2dfbc021-c147-4c27-94c7-fdc71dd1f792",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/parking/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/parking/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/parking/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/parking/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "57b2dc69-3fdb-4e60-af88-b413e8b24678",
          "name": "/v1/parking/update/:id",
          "request": {
            "name": "/v1/parking/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "parking",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "wowhdybituf34cr8im31nr4s",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Covered\",\n  \"fee\": 100,\n  \"feeInterval\": \"monthly\",\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "abbea624-0ef6-4224-84ee-546b190c1037",
              "name": "Responds with the id of the updated parking.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "wowhdybituf34cr8im31nr4s",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Covered\",\n  \"fee\": 100,\n  \"feeInterval\": \"monthly\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "96c7d37c-38b6-427a-8336-d760f69ee7b0",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "wowhdybituf34cr8im31nr4s",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Covered\",\n  \"fee\": 100,\n  \"feeInterval\": \"monthly\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "cb52b084-ef15-4491-ae46-c69787b6d699",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "wowhdybituf34cr8im31nr4s",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Covered\",\n  \"fee\": 100,\n  \"feeInterval\": \"monthly\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "184a14b7-ceea-4c74-a5da-2e3d87d2b535",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "wowhdybituf34cr8im31nr4s",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Covered\",\n  \"fee\": 100,\n  \"feeInterval\": \"monthly\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c5dbf3cf-6dc5-426a-8f85-749705c67d0a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/parking/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/parking/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/parking/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/parking/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "af6453a6-aa4a-45dc-845c-2b623888e1c2",
          "name": "/v1/parking/delete/:id",
          "request": {
            "name": "/v1/parking/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "parking",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "wowhdybituf34cr8im31nr4s",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "19c61c00-e25f-44e6-b43c-d2d69ea9f8c7",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "wowhdybituf34cr8im31nr4s",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e3666f1f-ee30-4691-8544-0435e597f19a",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "wowhdybituf34cr8im31nr4s",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0927a87a-b378-4fe3-9513-54b4eae41d34",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "wowhdybituf34cr8im31nr4s",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9f805664-02f2-47f0-8a22-3749c5a3e774",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "wowhdybituf34cr8im31nr4s",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "25da5429-8b98-4854-98a7-cccd4fcfedf3",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "parking",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "wowhdybituf34cr8im31nr4s",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ef01e2a0-4dbf-44fb-9704-8ff90f2b27f7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/parking/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/parking/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/parking/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/parking/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "f4e5fbad-6550-441c-8c55-4c7461059120",
      "name": "property",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "53ae6566-abd8-4d06-87c5-845cf84c679b",
          "name": "/v1/property/:id",
          "request": {
            "name": "/v1/property/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "property",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "hdsyi7gw3n77jrngcck1x33y",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "abdc4084-352e-48bb-94ff-68da4382f10f",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"cupidatat ex culpa anim\",\n    \"listingId\": 38280776.67767188,\n    \"name\": \"ut incididunt\",\n    \"address\": \"officia tempor sed\",\n    \"latitude\": \"deserunt nulla officia\",\n    \"longitude\": \"in ex\",\n    \"yearBuilt\": -10223995,\n    \"descriptionTitle\": \"laboris Ut reprehenderit in\",\n    \"descriptionSubtitle\": \"commodo\",\n    \"descriptionText\": \"exercitation proident\",\n    \"smoking\": true,\n    \"cats\": false,\n    \"dogs\": false,\n    \"petsNegotiable\": true,\n    \"petsFee\": -49636239,\n    \"petsFeeInterval\": \"elit dolore\",\n    \"published\": false,\n    \"customerRanking\": 68589906.85151508,\n    \"paidSearchRanking\": false,\n    \"city\": {\n      \"name\": \"est\"\n    },\n    \"featureToProperty\": [\n      {\n        \"feature\": {\n          \"name\": \"Duis eu ullamco dolore aliquip\"\n        }\n      },\n      {\n        \"feature\": {\n          \"name\": \"eiusmod magna\"\n        }\n      }\n    ],\n    \"buildingFeatureToProperty\": [\n      {\n        \"buildingFeature\": {\n          \"name\": \"elit nisi voluptate adipisicing ex\"\n        }\n      },\n      {\n        \"buildingFeature\": {\n          \"name\": \"in commodo ea et\"\n        }\n      }\n    ],\n    \"community\": {\n      \"name\": \"Duis irure elit\",\n      \"score\": 38656333,\n      \"imageUrl\": \"magna sed aliqua Duis\",\n      \"quadrant\": \"ex anim incididunt\",\n      \"sector\": \"culpa ut cupidatat\",\n      \"ward\": \"minim ut ipsum ad\",\n      \"population\": -52858305,\n      \"dwellings\": 18004577,\n      \"usedForRenting\": 13502114.186774477,\n      \"area\": -21418314.41947697,\n      \"density\": -13413362.386379778,\n      \"averageIncome\": -47827060,\n      \"lowIncome\": 16903385.22935511,\n      \"immigrants\": -33795693.03525365,\n      \"elevation\": -12142273,\n      \"established\": 13554288,\n      \"description\": \"Duis\",\n      \"latitude\": -20769422.625065386,\n      \"longitude\": 8003788.880180225,\n      \"communityFeatureToCommunity\": [\n        {\n          \"communityFeature\": {\n            \"name\": \"veniam ullamco\"\n          }\n        },\n        {\n          \"communityFeature\": {\n            \"name\": \"consequat Lorem\"\n          }\n        }\n      ]\n    },\n    \"medias\": [\n      {\n        \"assetId\": \"dolor in\",\n        \"order\": -86012538.93309857\n      },\n      {\n        \"assetId\": \"Excepteur\",\n        \"order\": 30489711.988420293\n      }\n    ],\n    \"parkings\": [\n      {\n        \"name\": \"quis sed dolor\",\n        \"fee\": -36896521.4639875,\n        \"feeInterval\": \"dolor Lorem aute culpa\"\n      },\n      {\n        \"name\": \"tempor ipsum\",\n        \"fee\": 60391007.75962272,\n        \"feeInterval\": \"nisi tempor\"\n      }\n    ],\n    \"typeProp\": {\n      \"name\": \"eiusmod non\"\n    },\n    \"floorPlans\": [\n      {\n        \"id\": \"ea ut\",\n        \"name\": \"do ad dolor\",\n        \"order\": 7415056.145700261,\n        \"units\": [\n          {\n            \"id\": \"sit laborum dolore Duis\",\n            \"name\": \"in Ut \",\n            \"rent\": 66553702.903686404,\n            \"deposit\": -11326490.883344814,\n            \"available\": false,\n            \"immediate\": true,\n            \"availableDate\": \"est velit in\",\n            \"shortterm\": true,\n            \"longterm\": false,\n            \"unitNumber\": \"irure ut ex labore\",\n            \"unitName\": \"id ea sint\",\n            \"surface\": -88671056,\n            \"furnished\": true,\n            \"heat\": false,\n            \"water\": true,\n            \"electricity\": true,\n            \"internet\": true,\n            \"television\": true,\n            \"order\": 67999973,\n            \"published\": false,\n            \"bedroom\": {\n              \"name\": \"ipsum est sit\"\n            },\n            \"bathroom\": {\n              \"name\": \"ut occ\"\n            }\n          },\n          {\n            \"id\": \"dolore\",\n            \"name\": \"dolore laborum nisi\",\n            \"rent\": 48611639.92684218,\n            \"deposit\": -30750504.25107552,\n            \"available\": true,\n            \"immediate\": false,\n            \"availableDate\": \"commodo ex\",\n            \"shortterm\": false,\n            \"longterm\": false,\n            \"unitNumber\": \"veniam ad\",\n            \"unitName\": \"officia nulla sunt reprehenderit\",\n            \"surface\": -20915682,\n            \"furnished\": false,\n            \"heat\": true,\n            \"water\": false,\n            \"electricity\": true,\n            \"internet\": true,\n            \"television\": true,\n            \"order\": 8608554,\n            \"published\": false,\n            \"bedroom\": {\n              \"name\": \"pariatur ut id\"\n            },\n            \"bathroom\": {\n              \"name\": \"nostrud\"\n            }\n          }\n        ]\n      },\n      {\n        \"id\": \"in ea deserunt nulla\",\n        \"name\": \"d\",\n        \"order\": 21670918.792345792,\n        \"units\": [\n          {\n            \"id\": \"deserunt ut commodo\",\n            \"name\": \"consequat est exercitation\",\n            \"rent\": -10170392.226376683,\n            \"deposit\": -75329634.17484728,\n            \"available\": true,\n            \"immediate\": false,\n            \"availableDate\": \"culpa in pariatur\",\n            \"shortterm\": true,\n            \"longterm\": false,\n            \"unitNumber\": \"quis\",\n            \"unitName\": \"amet deserunt nostrud non\",\n            \"surface\": -68821097,\n            \"furnished\": true,\n            \"heat\": false,\n            \"water\": true,\n            \"electricity\": true,\n            \"internet\": false,\n            \"television\": false,\n            \"order\": 98352569,\n            \"published\": false,\n            \"bedroom\": {\n              \"name\": \"reprehenderit irure dolor\"\n            },\n            \"bathroom\": {\n              \"name\": \"est\"\n            }\n          },\n          {\n            \"id\": \"aliqua amet et consequat do\",\n            \"name\": \"aute dolor ei\",\n            \"rent\": -44576680.82685098,\n            \"deposit\": -96672405.13294932,\n            \"available\": true,\n            \"immediate\": false,\n            \"availableDate\": \"dolor null\",\n            \"shortterm\": true,\n            \"longterm\": false,\n            \"unitNumber\": \"fugiat occaecat eu magna\",\n            \"unitName\": \"ut dolor culpa\",\n            \"surface\": 30580250,\n            \"furnished\": true,\n            \"heat\": true,\n            \"water\": false,\n            \"electricity\": false,\n            \"internet\": true,\n            \"television\": true,\n            \"order\": -20739829,\n            \"published\": false,\n            \"bedroom\": {\n              \"name\": \"aliquip id ullamco\"\n            },\n            \"bathroom\": {\n              \"name\": \"eu mollit\"\n            }\n          }\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6d8f3d06-3d88-4910-b20d-417dfb2104dd",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "08baab05-6acb-4f27-ad5c-16302ea8a916",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "76bf9926-8904-4d18-a633-4d40663de0e1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/v1/property/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/v1/property/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/v1/property/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"listingId\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"address\":{\"type\":\"string\"},\"latitude\":{\"type\":\"string\"},\"longitude\":{\"type\":\"string\"},\"yearBuilt\":{\"type\":[\"integer\",\"null\"]},\"descriptionTitle\":{\"type\":[\"string\",\"null\"]},\"descriptionSubtitle\":{\"type\":[\"string\",\"null\"]},\"descriptionText\":{\"type\":[\"string\",\"null\"]},\"smoking\":{\"type\":\"boolean\"},\"cats\":{\"type\":\"boolean\"},\"dogs\":{\"type\":\"boolean\"},\"petsNegotiable\":{\"type\":\"boolean\"},\"petsFee\":{\"type\":[\"integer\",\"null\"]},\"petsFeeInterval\":{\"type\":[\"string\",\"null\"]},\"published\":{\"type\":\"boolean\"},\"customerRanking\":{\"type\":\"number\"},\"paidSearchRanking\":{\"type\":\"boolean\"},\"city\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]},\"featureToProperty\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"feature\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]}},\"required\":[\"feature\"]}},\"buildingFeatureToProperty\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"buildingFeature\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]}},\"required\":[\"buildingFeature\"]}},\"community\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"score\":{\"type\":[\"integer\",\"null\"]},\"imageUrl\":{\"type\":[\"string\",\"null\"]},\"quadrant\":{\"type\":[\"string\",\"null\"]},\"sector\":{\"type\":[\"string\",\"null\"]},\"ward\":{\"type\":[\"string\",\"null\"]},\"population\":{\"type\":[\"integer\",\"null\"]},\"dwellings\":{\"type\":[\"integer\",\"null\"]},\"usedForRenting\":{\"type\":[\"number\",\"null\"]},\"area\":{\"type\":[\"number\",\"null\"]},\"density\":{\"type\":[\"number\",\"null\"]},\"averageIncome\":{\"type\":[\"integer\",\"null\"]},\"lowIncome\":{\"type\":[\"number\",\"null\"]},\"immigrants\":{\"type\":[\"number\",\"null\"]},\"elevation\":{\"type\":[\"integer\",\"null\"]},\"established\":{\"type\":[\"integer\",\"null\"]},\"description\":{\"type\":[\"string\",\"null\"]},\"latitude\":{\"type\":\"number\"},\"longitude\":{\"type\":\"number\"},\"communityFeatureToCommunity\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"communityFeature\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]}},\"required\":[\"communityFeature\"]}}},\"required\":[\"name\",\"score\",\"imageUrl\",\"quadrant\",\"sector\",\"ward\",\"population\",\"dwellings\",\"usedForRenting\",\"area\",\"density\",\"averageIncome\",\"lowIncome\",\"immigrants\",\"elevation\",\"established\",\"description\",\"latitude\",\"longitude\",\"communityFeatureToCommunity\"]},\"medias\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"assetId\":{\"type\":\"string\"},\"order\":{\"type\":\"number\"}},\"required\":[\"assetId\",\"order\"]}},\"parkings\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"fee\":{\"type\":\"number\"},\"feeInterval\":{\"type\":\"string\"}},\"required\":[\"name\",\"fee\",\"feeInterval\"]}},\"typeProp\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]},\"floorPlans\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"order\":{\"type\":\"number\"},\"units\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"rent\":{\"type\":\"number\"},\"deposit\":{\"type\":[\"number\",\"null\"]},\"available\":{\"type\":\"boolean\"},\"immediate\":{\"type\":\"boolean\"},\"availableDate\":{\"type\":[\"string\",\"null\"]},\"shortterm\":{\"type\":\"boolean\"},\"longterm\":{\"type\":\"boolean\"},\"unitNumber\":{\"type\":[\"string\",\"null\"]},\"unitName\":{\"type\":[\"string\",\"null\"]},\"surface\":{\"type\":\"integer\"},\"furnished\":{\"type\":\"boolean\"},\"heat\":{\"type\":\"boolean\"},\"water\":{\"type\":\"boolean\"},\"electricity\":{\"type\":\"boolean\"},\"internet\":{\"type\":\"boolean\"},\"television\":{\"type\":\"boolean\"},\"order\":{\"type\":\"integer\"},\"published\":{\"type\":\"boolean\"},\"bedroom\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]},\"bathroom\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]}},\"required\":[\"id\",\"name\",\"rent\",\"deposit\",\"available\",\"immediate\",\"availableDate\",\"shortterm\",\"longterm\",\"unitNumber\",\"unitName\",\"surface\",\"furnished\",\"heat\",\"water\",\"electricity\",\"internet\",\"television\",\"order\",\"published\",\"bedroom\",\"bathroom\"]}}},\"required\":[\"id\",\"name\",\"order\",\"units\"]}}},\"required\":[\"id\",\"listingId\",\"name\",\"address\",\"latitude\",\"longitude\",\"yearBuilt\",\"descriptionTitle\",\"descriptionSubtitle\",\"descriptionText\",\"smoking\",\"cats\",\"dogs\",\"petsNegotiable\",\"petsFee\",\"petsFeeInterval\",\"published\",\"customerRanking\",\"paidSearchRanking\",\"city\",\"featureToProperty\",\"buildingFeatureToProperty\",\"community\",\"medias\",\"parkings\",\"typeProp\",\"floorPlans\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/v1/property/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "c9baf1ca-c8ac-40e2-9e79-d820ad50a2d0",
          "name": "/v1/property/list",
          "request": {
            "name": "/v1/property/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "property",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "id-desc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"gt\",\n          \"yearBuilt\",\n          2010\n        ],\n        [\n          \"lt\",\n          \"yearBuilt\",\n          2020\n        ]\n      ]\n    ],\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"cats\",\n          1\n        ],\n        [\n          \"eq\",\n          \"dogs\",\n          1\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"communityId\",\n      \"icj3bimn4dg5v1yeu7i2frzq\"\n    ],\n    [\n      \"eq\",\n      \"cityId\",\n      \"dl7r7ezrt909p6bmct6avl9l\"\n    ],\n    [\n      \"eq\",\n      \"smoking\",\n      0\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "87c351a1-51bd-4a33-8fda-2b26af746968",
              "name": "Responds with an array of property objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "id-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"gt\",\n          \"yearBuilt\",\n          2010\n        ],\n        [\n          \"lt\",\n          \"yearBuilt\",\n          2020\n        ]\n      ]\n    ],\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"cats\",\n          1\n        ],\n        [\n          \"eq\",\n          \"dogs\",\n          1\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"communityId\",\n      \"icj3bimn4dg5v1yeu7i2frzq\"\n    ],\n    [\n      \"eq\",\n      \"cityId\",\n      \"dl7r7ezrt909p6bmct6avl9l\"\n    ],\n    [\n      \"eq\",\n      \"smoking\",\n      0\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"voluptate\",\n      \"listingId\": 31037118.282786787,\n      \"name\": \"consequat ullamco dolor tempor\",\n      \"address\": \"incididunt adi\",\n      \"latitude\": \"consequat id\",\n      \"longitude\": \"Lore\",\n      \"yearBuilt\": 24062336.98991622,\n      \"descriptionTitle\": \"dolore aliqua veniam incididunt\",\n      \"descriptionSubtitle\": \"ut sint\",\n      \"descriptionText\": \"consectetur irure ex et deserunt\",\n      \"typePropId\": \"consectetur cupidatat ipsum consequat\",\n      \"communityId\": \"dolore pariatur sint\",\n      \"cityId\": \"ipsum\",\n      \"smoking\": true,\n      \"cats\": true,\n      \"dogs\": true,\n      \"petsNegotiable\": false,\n      \"petsFee\": -99343921.04697354,\n      \"petsFeeInterval\": \"tempor Excepteur aute nulla\",\n      \"published\": false,\n      \"customerRanking\": 20247378.683906406,\n      \"paidSearchRanking\": false,\n      \"createdAt\": \"cupidatat ad et\",\n      \"updatedAt\": \"consequat\"\n    },\n    {\n      \"id\": \"ea enim\",\n      \"listingId\": 1502788.5252246559,\n      \"name\": \"ex nostrud\",\n      \"address\": \"veniam ea\",\n      \"latitude\": \"Ut nostrud do\",\n      \"longitude\": \"dolore elit aliquip\",\n      \"yearBuilt\": 9724963.39934206,\n      \"descriptionTitle\": \"dolore commodo\",\n      \"descriptionSubtitle\": \"elit\",\n      \"descriptionText\": \"deserunt\",\n      \"typePropId\": \"qui occ\",\n      \"communityId\": \"anim nostrud eu magna tempor\",\n      \"cityId\": \"et incididunt Duis\",\n      \"smoking\": true,\n      \"cats\": false,\n      \"dogs\": false,\n      \"petsNegotiable\": false,\n      \"petsFee\": -37803505.31321854,\n      \"petsFeeInterval\": \"proi\",\n      \"published\": false,\n      \"customerRanking\": -7532762.702522427,\n      \"paidSearchRanking\": true,\n      \"createdAt\": \"consectetur labore veniam i\",\n      \"updatedAt\": \"in nostrud in occaecat\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3fefc662-3eb9-4b14-af88-2c1c09068384",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "id-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"gt\",\n          \"yearBuilt\",\n          2010\n        ],\n        [\n          \"lt\",\n          \"yearBuilt\",\n          2020\n        ]\n      ]\n    ],\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"cats\",\n          1\n        ],\n        [\n          \"eq\",\n          \"dogs\",\n          1\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"communityId\",\n      \"icj3bimn4dg5v1yeu7i2frzq\"\n    ],\n    [\n      \"eq\",\n      \"cityId\",\n      \"dl7r7ezrt909p6bmct6avl9l\"\n    ],\n    [\n      \"eq\",\n      \"smoking\",\n      0\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e906d6e3-05e1-4424-8e4a-c6e3e0cab5fb",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "id-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"gt\",\n          \"yearBuilt\",\n          2010\n        ],\n        [\n          \"lt\",\n          \"yearBuilt\",\n          2020\n        ]\n      ]\n    ],\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"cats\",\n          1\n        ],\n        [\n          \"eq\",\n          \"dogs\",\n          1\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"communityId\",\n      \"icj3bimn4dg5v1yeu7i2frzq\"\n    ],\n    [\n      \"eq\",\n      \"cityId\",\n      \"dl7r7ezrt909p6bmct6avl9l\"\n    ],\n    [\n      \"eq\",\n      \"smoking\",\n      0\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c648aea3-cb0e-484c-b932-3858c38c10fd",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/property/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/property/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/property/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"listingId\":{\"type\":\"number\"},\"name\":{\"type\":\"string\",\"maxLength\":256},\"address\":{\"type\":\"string\",\"maxLength\":256},\"latitude\":{\"type\":\"string\"},\"longitude\":{\"type\":\"string\"},\"yearBuilt\":{\"type\":[\"number\",\"null\"]},\"descriptionTitle\":{\"type\":[\"string\",\"null\"],\"maxLength\":256},\"descriptionSubtitle\":{\"type\":[\"string\",\"null\"],\"maxLength\":256},\"descriptionText\":{\"type\":[\"string\",\"null\"]},\"typePropId\":{\"type\":\"string\",\"maxLength\":128},\"communityId\":{\"type\":[\"string\",\"null\"],\"maxLength\":128},\"cityId\":{\"type\":\"string\",\"maxLength\":128},\"smoking\":{\"type\":\"boolean\"},\"cats\":{\"type\":\"boolean\"},\"dogs\":{\"type\":\"boolean\"},\"petsNegotiable\":{\"type\":\"boolean\"},\"petsFee\":{\"type\":[\"number\",\"null\"]},\"petsFeeInterval\":{\"type\":[\"string\",\"null\"],\"maxLength\":128},\"published\":{\"type\":\"boolean\"},\"customerRanking\":{\"type\":\"number\"},\"paidSearchRanking\":{\"type\":\"boolean\"},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"listingId\",\"name\",\"address\",\"latitude\",\"longitude\",\"yearBuilt\",\"descriptionTitle\",\"descriptionSubtitle\",\"descriptionText\",\"typePropId\",\"communityId\",\"cityId\",\"smoking\",\"cats\",\"dogs\",\"petsNegotiable\",\"petsFee\",\"petsFeeInterval\",\"published\",\"customerRanking\",\"paidSearchRanking\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/property/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "417024f4-658a-4b75-95c5-9f4f4c120fdb",
          "name": "/v1/property/create",
          "request": {
            "name": "/v1/property/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "property",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Property name\",\n  \"address\": \"123 Main St, Calgary, AB T2P 1J9\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"yearBuilt\": 2019,\n  \"descriptionTitle\": \"Property description title\",\n  \"descriptionSubtitle\": \"Property description subtitle\",\n  \"descriptionText\": \"Property description text\",\n  \"typePropId\": \"zvyuykclatrceuwmxo1bd42p\",\n  \"communityId\": \"icj3bimn4dg5v1yeu7i2frzq\",\n  \"cityId\": \"dl7r7ezrt909p6bmct6avl9l\",\n  \"smoking\": false,\n  \"cats\": true,\n  \"dogs\": false,\n  \"petsNegotiable\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "fb1a8544-9bed-4094-a68b-04f4a5f5702d",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Property name\",\n  \"address\": \"123 Main St, Calgary, AB T2P 1J9\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"yearBuilt\": 2019,\n  \"descriptionTitle\": \"Property description title\",\n  \"descriptionSubtitle\": \"Property description subtitle\",\n  \"descriptionText\": \"Property description text\",\n  \"typePropId\": \"zvyuykclatrceuwmxo1bd42p\",\n  \"communityId\": \"icj3bimn4dg5v1yeu7i2frzq\",\n  \"cityId\": \"dl7r7ezrt909p6bmct6avl9l\",\n  \"smoking\": false,\n  \"cats\": true,\n  \"dogs\": false,\n  \"petsNegotiable\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9f0a808c-ab96-4a00-97d4-8f6d625f2150",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Property name\",\n  \"address\": \"123 Main St, Calgary, AB T2P 1J9\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"yearBuilt\": 2019,\n  \"descriptionTitle\": \"Property description title\",\n  \"descriptionSubtitle\": \"Property description subtitle\",\n  \"descriptionText\": \"Property description text\",\n  \"typePropId\": \"zvyuykclatrceuwmxo1bd42p\",\n  \"communityId\": \"icj3bimn4dg5v1yeu7i2frzq\",\n  \"cityId\": \"dl7r7ezrt909p6bmct6avl9l\",\n  \"smoking\": false,\n  \"cats\": true,\n  \"dogs\": false,\n  \"petsNegotiable\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "562b6da2-bdcb-48c1-9b44-2aa77370d42f",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Property name\",\n  \"address\": \"123 Main St, Calgary, AB T2P 1J9\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"yearBuilt\": 2019,\n  \"descriptionTitle\": \"Property description title\",\n  \"descriptionSubtitle\": \"Property description subtitle\",\n  \"descriptionText\": \"Property description text\",\n  \"typePropId\": \"zvyuykclatrceuwmxo1bd42p\",\n  \"communityId\": \"icj3bimn4dg5v1yeu7i2frzq\",\n  \"cityId\": \"dl7r7ezrt909p6bmct6avl9l\",\n  \"smoking\": false,\n  \"cats\": true,\n  \"dogs\": false,\n  \"petsNegotiable\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "07362a39-db18-496c-b3c2-6195ac768422",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Property name\",\n  \"address\": \"123 Main St, Calgary, AB T2P 1J9\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"yearBuilt\": 2019,\n  \"descriptionTitle\": \"Property description title\",\n  \"descriptionSubtitle\": \"Property description subtitle\",\n  \"descriptionText\": \"Property description text\",\n  \"typePropId\": \"zvyuykclatrceuwmxo1bd42p\",\n  \"communityId\": \"icj3bimn4dg5v1yeu7i2frzq\",\n  \"cityId\": \"dl7r7ezrt909p6bmct6avl9l\",\n  \"smoking\": false,\n  \"cats\": true,\n  \"dogs\": false,\n  \"petsNegotiable\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "995165ba-5c2a-4021-90f2-c40e57ce248f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/property/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/property/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/property/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/property/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "faf93d86-9695-4eda-a3ab-cb2fa4c54fb8",
          "name": "/v1/property/update/:id",
          "request": {
            "name": "/v1/property/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "property",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "hdsyi7gw3n77jrngcck1x33y",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Property name\",\n  \"address\": \"123 Main St, Calgary, AB T2P 1J9\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"yearBuilt\": 2020,\n  \"descriptionTitle\": \"Property description title\",\n  \"descriptionSubtitle\": \"Property description subtitle\",\n  \"descriptionText\": \"Property description text\",\n  \"smoking\": true,\n  \"cats\": true,\n  \"dogs\": false,\n  \"petsNegotiable\": true,\n  \"petsFee\": 100\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6f2e1714-3828-4341-81c2-0acb392e3767",
              "name": "Responds with the id of the updated property.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Property name\",\n  \"address\": \"123 Main St, Calgary, AB T2P 1J9\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"yearBuilt\": 2020,\n  \"descriptionTitle\": \"Property description title\",\n  \"descriptionSubtitle\": \"Property description subtitle\",\n  \"descriptionText\": \"Property description text\",\n  \"smoking\": true,\n  \"cats\": true,\n  \"dogs\": false,\n  \"petsNegotiable\": true,\n  \"petsFee\": 100\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "79f3e2bf-a651-4561-99a2-13230c89b441",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Property name\",\n  \"address\": \"123 Main St, Calgary, AB T2P 1J9\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"yearBuilt\": 2020,\n  \"descriptionTitle\": \"Property description title\",\n  \"descriptionSubtitle\": \"Property description subtitle\",\n  \"descriptionText\": \"Property description text\",\n  \"smoking\": true,\n  \"cats\": true,\n  \"dogs\": false,\n  \"petsNegotiable\": true,\n  \"petsFee\": 100\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0b972258-c5f2-45a7-8ac1-4a0a1d3413f8",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Property name\",\n  \"address\": \"123 Main St, Calgary, AB T2P 1J9\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"yearBuilt\": 2020,\n  \"descriptionTitle\": \"Property description title\",\n  \"descriptionSubtitle\": \"Property description subtitle\",\n  \"descriptionText\": \"Property description text\",\n  \"smoking\": true,\n  \"cats\": true,\n  \"dogs\": false,\n  \"petsNegotiable\": true,\n  \"petsFee\": 100\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ba90ce02-1f31-4d23-8b77-1939452396af",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Property name\",\n  \"address\": \"123 Main St, Calgary, AB T2P 1J9\",\n  \"latitude\": \"51.0447\",\n  \"longitude\": \"-114.0719\",\n  \"yearBuilt\": 2020,\n  \"descriptionTitle\": \"Property description title\",\n  \"descriptionSubtitle\": \"Property description subtitle\",\n  \"descriptionText\": \"Property description text\",\n  \"smoking\": true,\n  \"cats\": true,\n  \"dogs\": false,\n  \"petsNegotiable\": true,\n  \"petsFee\": 100\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0138715e-af64-45b1-9ac7-60b48b090e02",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/property/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/property/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/property/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/property/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "6c426829-947f-4c5f-89c8-38b039e9ad10",
          "name": "/v1/property/delete/:id",
          "request": {
            "name": "/v1/property/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "property",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "hdsyi7gw3n77jrngcck1x33y",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4f6ee751-6019-4124-81a9-87871251ec94",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0d7bb589-dce3-477c-9c72-cf8defcf1454",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "db2fdcd1-ef92-4fdc-8664-36430f3f6082",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "af7f3e62-805c-4630-8b94-64e34961ee9a",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a9f3c173-3834-495a-8c80-c7f48174ab59",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "property",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "hdsyi7gw3n77jrngcck1x33y",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9cdb0e98-b9ae-405e-bab2-0f5221903e19",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/property/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/property/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/property/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/property/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "1d6dc221-f29c-48c6-b150-931249943ecf",
      "name": "region",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "94768669-3396-446e-893e-e99e5932dced",
          "name": "/v1/region/:id",
          "request": {
            "name": "/v1/region/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "region",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "kj3nrb5rv094v8ns5ptz1jhc",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "e9d28fb6-2384-4024-924a-ffcd252a45a3",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kj3nrb5rv094v8ns5ptz1jhc",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"velit Lorem\",\n    \"name\": \"adipisicing fugiat reprehenderit\",\n    \"administrativeName\": \"eiusmod culpa tempor ad\",\n    \"cities\": [\n      {\n        \"id\": \"eu\",\n        \"name\": \"do irure et esse laborum\"\n      },\n      {\n        \"id\": \"anim deserunt Ut occaecat\",\n        \"name\": \"laborum labore amet non\"\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "51227451-dadb-4f7e-8350-2f205f134829",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kj3nrb5rv094v8ns5ptz1jhc",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f67f78b9-048a-43b3-9f23-29f3e47ba4d2",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kj3nrb5rv094v8ns5ptz1jhc",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "30e94f4d-e982-4fe0-9fac-4f4f55155fda",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/v1/region/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/v1/region/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/v1/region/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"administrativeName\":{\"type\":\"string\"},\"cities\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\"]}}},\"required\":[\"id\",\"name\",\"administrativeName\",\"cities\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/v1/region/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fda5320b-57fd-4e93-8390-82c1a442b510",
          "name": "/v1/region/list",
          "request": {
            "name": "/v1/region/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "region",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "id-asc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Alberta\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Manitoba\"\n        ]\n      ]\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-23T00:00:00.000Z\",\n      \"2024-02-12T00:00:00.000Z\"\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ec3c747c-c82b-43a2-abc0-39c572e84d2d",
              "name": "Responds with an array of region objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "id-asc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Alberta\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Manitoba\"\n        ]\n      ]\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-23T00:00:00.000Z\",\n      \"2024-02-12T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"laborum\",\n      \"name\": \"reprehenderit Ut\",\n      \"administrativeName\": \"cillum exercitation ipsum sed\",\n      \"createdAt\": \"ipsum incididunt\",\n      \"updatedAt\": \"id non ex dolore\"\n    },\n    {\n      \"id\": \"sunt\",\n      \"name\": \"non labore aute\",\n      \"administrativeName\": \"aliquip culpa nisi irur\",\n      \"createdAt\": \"ipsum\",\n      \"updatedAt\": \"elit tempor ut eu\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "068e3fbe-0507-455b-b496-e5ceefdc11ed",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "id-asc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Alberta\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Manitoba\"\n        ]\n      ]\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-23T00:00:00.000Z\",\n      \"2024-02-12T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6a6d66aa-e0cc-4172-8cd3-ed71025106f0",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "id-asc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"Alberta\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"Manitoba\"\n        ]\n      ]\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-23T00:00:00.000Z\",\n      \"2024-02-12T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d272e5b4-e365-439a-9109-bb1339eeba79",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/region/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/region/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/region/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"name\":{\"type\":\"string\",\"maxLength\":256},\"administrativeName\":{\"type\":\"string\",\"maxLength\":256},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"administrativeName\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/region/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "335a3783-08d8-4b87-837e-fce921eee0af",
          "name": "/v1/region/create",
          "request": {
            "name": "/v1/region/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "region",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Ontario\",\n  \"administrativeName\": \"Province\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d7b1b0e9-3577-4e75-bc78-1efaa4ec7bd3",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Ontario\",\n  \"administrativeName\": \"Province\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "583defcd-7e08-4db1-a0bc-8b974bf6b357",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Ontario\",\n  \"administrativeName\": \"Province\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6d5dbb93-985a-4446-ab80-399779ebc4df",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Ontario\",\n  \"administrativeName\": \"Province\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "586cc58e-448a-4887-8675-e37f0f12cd41",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Ontario\",\n  \"administrativeName\": \"Province\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2af7e0aa-bd6d-4165-b60a-ef4f5f23d92b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/region/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/region/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/region/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/region/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "e01427aa-4c75-4864-8725-84a11c92d264",
          "name": "/v1/region/update/:id",
          "request": {
            "name": "/v1/region/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "region",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "kj3nrb5rv094v8ns5ptz1jhc",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"administrativeName\": \"State\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9379f2da-21c2-4296-9628-54f27e4852ae",
              "name": "Responds with the id of the updated region.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kj3nrb5rv094v8ns5ptz1jhc",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"administrativeName\": \"State\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f6c96fe4-b4b6-4478-9ac3-c602ab8b7dfc",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kj3nrb5rv094v8ns5ptz1jhc",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"administrativeName\": \"State\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4d3972b5-f7d8-406c-84bb-a5121880a36b",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kj3nrb5rv094v8ns5ptz1jhc",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"administrativeName\": \"State\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "17692e6b-ee93-4a3b-87a9-cbc6ea858aed",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kj3nrb5rv094v8ns5ptz1jhc",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"administrativeName\": \"State\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "82838e3b-8d6f-4e8b-b941-863c7fb1775b",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/region/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/region/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/region/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/region/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "39354ab4-9373-41d7-bb50-ddeb59b14faa",
          "name": "/v1/region/delete/:id",
          "request": {
            "name": "/v1/region/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "region",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "kj3nrb5rv094v8ns5ptz1jhc",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "4dbb1d0e-1d49-48a0-85e4-a5ed2fd6b991",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kj3nrb5rv094v8ns5ptz1jhc",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1af3d976-d820-47cc-945d-21dc086460f4",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kj3nrb5rv094v8ns5ptz1jhc",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "bc877c39-7f3a-4a8c-acc6-3551cbc173df",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kj3nrb5rv094v8ns5ptz1jhc",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a323638f-59f1-4db5-89b9-30389d16c7b8",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kj3nrb5rv094v8ns5ptz1jhc",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "935e1d0e-ec15-4852-a02d-76985e8406e9",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "region",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "kj3nrb5rv094v8ns5ptz1jhc",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5623da40-0774-4d8d-a944-56c57c21e985",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/region/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/region/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/region/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/region/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "e0fbc965-1d74-423a-b9f9-2fd4ed335ea0",
      "name": "typeProp",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "348ea61d-6854-4fea-a35f-2dae61da7045",
          "name": "/v1/type-prop/list",
          "request": {
            "name": "/v1/type-prop/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "type-prop",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "updatedAt-desc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a6beca18-ca67-4b1c-a344-f177de912592",
              "name": "Responds with an array of typeProp objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"labore ea sit incididunt\",\n      \"name\": \"in consectetur anim\",\n      \"order\": -3894539.451474935,\n      \"createdAt\": \"Ut\",\n      \"updatedAt\": \"nisi do\"\n    },\n    {\n      \"id\": \"consectetur irure\",\n      \"name\": \"amet consectetur sit Duis\",\n      \"order\": -53883371.626426294,\n      \"createdAt\": \"dolor tempor Ut sint\",\n      \"updatedAt\": \"cillum Excepteur sed\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a8dca85f-702c-4d32-9d84-c8422e221491",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2f04470f-64b6-46d7-a947-505e6ce01963",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "updatedAt-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"name\",\n          \"3+\"\n        ],\n        [\n          \"eq\",\n          \"name\",\n          \"2.5\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"order\",\n      1\n    ],\n    [\n      \"lt\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"gt\",\n      \"updatedAt\",\n      \"2024-01-01T00:00:00.000Z\"\n    ],\n    [\n      \"between\",\n      \"createdAt\",\n      \"2024-01-01T00:00:00.000Z\",\n      \"2024-01-02T00:00:00.000Z\"\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3fff302b-d498-4880-a2ef-c9293f79b57c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/type-prop/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/type-prop/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/type-prop/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"name\":{\"type\":\"string\",\"maxLength\":256},\"order\":{\"type\":\"number\"},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"order\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/type-prop/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "2690bfbb-d176-4a73-bbd1-837673367495",
          "name": "/v1/type-prop/create",
          "request": {
            "name": "/v1/type-prop/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "type-prop",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ed766a21-ea87-4257-a863-f0b3edca3172",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "82017b2d-9b12-4418-8ced-14053dbc7091",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "55859a8a-7e3e-4ce3-801f-b55b76234a75",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a6fe89bf-a23f-41d4-98f0-551c02a01da9",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"1.55\",\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "92a099b9-2ea5-4454-8de6-2e69da9b0e50",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/type-prop/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/type-prop/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/type-prop/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/type-prop/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "b3c8e4f8-dab4-45e0-a707-98f7ce149024",
          "name": "/v1/type-prop/update/:id",
          "request": {
            "name": "/v1/type-prop/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "type-prop",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "zvyuykclatrceuwmxo1bd42p",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"order\": 1\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d6ebdc98-8088-4649-9724-0b7581e26003",
              "name": "Responds with the id of the updated typeProp.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zvyuykclatrceuwmxo1bd42p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "eea9ed9f-a2f1-4014-90d5-09ec96502324",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zvyuykclatrceuwmxo1bd42p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "386dd88f-d6fc-4342-aa56-e6c7c5215c34",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zvyuykclatrceuwmxo1bd42p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "36a89b5d-5485-4b11-aceb-ea1674442c42",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zvyuykclatrceuwmxo1bd42p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"order\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4c19b513-c656-4ee1-bd64-7f6525b7e9d1",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/type-prop/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/type-prop/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/type-prop/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/type-prop/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "1723157a-5b8a-496c-8bf5-020f950caf33",
          "name": "/v1/type-prop/delete/:id",
          "request": {
            "name": "/v1/type-prop/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "type-prop",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "zvyuykclatrceuwmxo1bd42p",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f93bf384-8d80-411e-b091-e29b59e5b45b",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zvyuykclatrceuwmxo1bd42p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8b9d8f6e-6425-4f08-b145-d9f2137f4510",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zvyuykclatrceuwmxo1bd42p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "47b32b04-12e6-4b87-a6fd-b62eff88fc8b",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zvyuykclatrceuwmxo1bd42p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "555370ff-2d57-4a57-bf8c-1d4b068fe6c9",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zvyuykclatrceuwmxo1bd42p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "c8a27c8b-1dbe-41c2-b6da-5f3d363c99ae",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "type-prop",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "zvyuykclatrceuwmxo1bd42p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3db7d360-6f90-4dbe-9f6b-fe0e6b19e306",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/type-prop/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/type-prop/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/type-prop/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/type-prop/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "13745eec-0ccd-4f9b-a374-7169b7b47f7c",
      "name": "unit",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "0b4177df-261c-40c6-ac28-259d0c247b66",
          "name": "/v1/unit/:id",
          "request": {
            "name": "/v1/unit/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "unit",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "amyphpzv9inobdo3x1dfu18p",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "296fb4a6-ee0e-4843-a107-38959d846211",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "amyphpzv9inobdo3x1dfu18p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"sint in\",\n    \"propertyId\": \"elit et Excepteur sed in\",\n    \"floorPlanId\": \"cupidatat minim id\",\n    \"name\": \"proident\",\n    \"rent\": -29808195,\n    \"deposit\": 38995438,\n    \"available\": true,\n    \"immediate\": true,\n    \"availableDate\": \"voluptate Duis\",\n    \"shortterm\": false,\n    \"longterm\": false,\n    \"unitNumber\": \"aliqua laboris\",\n    \"unitName\": \"minim est Duis\",\n    \"surface\": -79307910,\n    \"furnished\": true,\n    \"heat\": true,\n    \"water\": false,\n    \"electricity\": false,\n    \"internet\": false,\n    \"television\": true,\n    \"order\": 83938323,\n    \"published\": false,\n    \"bedroom\": {\n      \"name\": \"adipisicing\"\n    },\n    \"bathroom\": {\n      \"name\": \"et consequat elit\"\n    }\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "9b9e5a17-b4f9-4abd-8bf0-dba272fabe07",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "amyphpzv9inobdo3x1dfu18p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "bd5c61a3-4aca-4870-9fd5-1421814b7aa7",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "amyphpzv9inobdo3x1dfu18p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1d9c8849-11b4-41e3-b220-0828b337387a",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/v1/unit/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/v1/unit/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/v1/unit/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"propertyId\":{\"type\":\"string\"},\"floorPlanId\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"rent\":{\"type\":\"integer\"},\"deposit\":{\"type\":[\"integer\",\"null\"]},\"available\":{\"type\":\"boolean\"},\"immediate\":{\"type\":\"boolean\"},\"availableDate\":{\"type\":[\"string\",\"null\"]},\"shortterm\":{\"type\":\"boolean\"},\"longterm\":{\"type\":\"boolean\"},\"unitNumber\":{\"type\":[\"string\",\"null\"]},\"unitName\":{\"type\":[\"string\",\"null\"]},\"surface\":{\"type\":\"integer\"},\"furnished\":{\"type\":\"boolean\"},\"heat\":{\"type\":\"boolean\"},\"water\":{\"type\":\"boolean\"},\"electricity\":{\"type\":\"boolean\"},\"internet\":{\"type\":\"boolean\"},\"television\":{\"type\":\"boolean\"},\"order\":{\"type\":\"integer\"},\"published\":{\"type\":\"boolean\"},\"bedroom\":{\"type\":[\"object\",\"null\"],\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]},\"bathroom\":{\"type\":[\"object\",\"null\"],\"properties\":{\"name\":{\"type\":\"string\"}},\"required\":[\"name\"]}},\"required\":[\"id\",\"propertyId\",\"floorPlanId\",\"name\",\"rent\",\"deposit\",\"available\",\"immediate\",\"availableDate\",\"shortterm\",\"longterm\",\"unitNumber\",\"unitName\",\"surface\",\"furnished\",\"heat\",\"water\",\"electricity\",\"internet\",\"television\",\"order\",\"published\",\"bedroom\",\"bathroom\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/v1/unit/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "7d388100-f55f-47e0-8320-f55f59f3ed21",
          "name": "/v1/unit/list",
          "request": {
            "name": "/v1/unit/list",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "unit",
                "list"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "limit",
                  "value": "10"
                },
                {
                  "disabled": true,
                  "key": "orderBy",
                  "value": "bedroomId-desc"
                },
                {
                  "disabled": true,
                  "key": "cursor",
                  "value": "abqdj6xe8puto1j83soz3bml"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"bedroomId\",\n          \"zjggk1ve17r7jmpq8dtmbjyw\"\n        ],\n        [\n          \"eq\",\n          \"bedroomId\",\n          \"kcfw2qhwnky96aeeov73aaze\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"bathroomId\",\n      \"qae4cp7xnotk3wh26dkpp7y7\"\n    ],\n    [\n      \"eq\",\n      \"longterm\",\n      1\n    ],\n    [\n      \"between\",\n      \"surface\",\n      700,\n      1000\n    ],\n    [\n      \"eq\",\n      \"furnished\",\n      1\n    ],\n    [\n      \"eq\",\n      \"heat\",\n      1\n    ],\n    [\n      \"eq\",\n      \"water\",\n      1\n    ],\n    [\n      \"eq\",\n      \"electricity\",\n      1\n    ]\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3d1defe2-bf12-45a1-aa2b-a5f226b80cb5",
              "name": "Responds with an array of unit objects. If no filters are used, all items are returned. If nothing is found according to filters, an empty array is returned as \"data\".",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "bedroomId-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"bedroomId\",\n          \"zjggk1ve17r7jmpq8dtmbjyw\"\n        ],\n        [\n          \"eq\",\n          \"bedroomId\",\n          \"kcfw2qhwnky96aeeov73aaze\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"bathroomId\",\n      \"qae4cp7xnotk3wh26dkpp7y7\"\n    ],\n    [\n      \"eq\",\n      \"longterm\",\n      1\n    ],\n    [\n      \"between\",\n      \"surface\",\n      700,\n      1000\n    ],\n    [\n      \"eq\",\n      \"furnished\",\n      1\n    ],\n    [\n      \"eq\",\n      \"heat\",\n      1\n    ],\n    [\n      \"eq\",\n      \"water\",\n      1\n    ],\n    [\n      \"eq\",\n      \"electricity\",\n      1\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"magna eu\",\n      \"name\": \"voluptate fugiat Lorem\",\n      \"propertyId\": \"minim occaecat\",\n      \"floorPlanId\": \"dolor cillum non\",\n      \"rent\": -36074221.33066067,\n      \"deposit\": 37509740.71770862,\n      \"available\": true,\n      \"immediate\": false,\n      \"availableDate\": \"Ut cillum sit\",\n      \"shortterm\": true,\n      \"longterm\": false,\n      \"unitNumber\": \"deserunt nostrud pariatur\",\n      \"unitName\": \"dolor quis incididunt\",\n      \"surface\": -20896496.59392436,\n      \"furnished\": true,\n      \"bedroomId\": \"culpa Lorem incididunt\",\n      \"bathroomId\": \"labore esse tempor\",\n      \"heat\": false,\n      \"water\": false,\n      \"electricity\": true,\n      \"internet\": false,\n      \"television\": false,\n      \"order\": -37236621.51108384,\n      \"published\": true,\n      \"createdAt\": \"amet veniam laboris ad\",\n      \"updatedAt\": \"aliqua non laboris consequat\"\n    },\n    {\n      \"id\": \"Lorem ut cillum\",\n      \"name\": \"occaecat qui\",\n      \"propertyId\": \"magna sint Duis laboris\",\n      \"floorPlanId\": \"labore ipsum est\",\n      \"rent\": -17052312.295461684,\n      \"deposit\": 5123176.353496373,\n      \"available\": true,\n      \"immediate\": true,\n      \"availableDate\": \"nisi dolore\",\n      \"shortterm\": true,\n      \"longterm\": false,\n      \"unitNumber\": \"minim\",\n      \"unitName\": \"aute labore\",\n      \"surface\": 9282988.820153952,\n      \"furnished\": true,\n      \"bedroomId\": \"sint\",\n      \"bathroomId\": \"enim et cillum dolore officia\",\n      \"heat\": false,\n      \"water\": true,\n      \"electricity\": true,\n      \"internet\": true,\n      \"television\": true,\n      \"order\": 99012332.28601408,\n      \"published\": false,\n      \"createdAt\": \"deserunt anim veniam ut et\",\n      \"updatedAt\": \"proident quis tempor\"\n    }\n  ]\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "27a75b34-c4f7-43ea-b5cb-322c4197d5ba",
              "name": "Responds with a bad request error object",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "bedroomId-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"bedroomId\",\n          \"zjggk1ve17r7jmpq8dtmbjyw\"\n        ],\n        [\n          \"eq\",\n          \"bedroomId\",\n          \"kcfw2qhwnky96aeeov73aaze\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"bathroomId\",\n      \"qae4cp7xnotk3wh26dkpp7y7\"\n    ],\n    [\n      \"eq\",\n      \"longterm\",\n      1\n    ],\n    [\n      \"between\",\n      \"surface\",\n      700,\n      1000\n    ],\n    [\n      \"eq\",\n      \"furnished\",\n      1\n    ],\n    [\n      \"eq\",\n      \"heat\",\n      1\n    ],\n    [\n      \"eq\",\n      \"water\",\n      1\n    ],\n    [\n      \"eq\",\n      \"electricity\",\n      1\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "18cc843f-9c1d-441c-8e95-85e3b20c2a5c",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "list"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "orderBy",
                      "value": "bedroomId-desc"
                    },
                    {
                      "key": "cursor",
                      "value": "abqdj6xe8puto1j83soz3bml"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"and\": [\n    [\n      \"or\",\n      [\n        [\n          \"eq\",\n          \"bedroomId\",\n          \"zjggk1ve17r7jmpq8dtmbjyw\"\n        ],\n        [\n          \"eq\",\n          \"bedroomId\",\n          \"kcfw2qhwnky96aeeov73aaze\"\n        ]\n      ]\n    ],\n    [\n      \"eq\",\n      \"bathroomId\",\n      \"qae4cp7xnotk3wh26dkpp7y7\"\n    ],\n    [\n      \"eq\",\n      \"longterm\",\n      1\n    ],\n    [\n      \"between\",\n      \"surface\",\n      700,\n      1000\n    ],\n    [\n      \"eq\",\n      \"furnished\",\n      1\n    ],\n    [\n      \"eq\",\n      \"heat\",\n      1\n    ],\n    [\n      \"eq\",\n      \"water\",\n      1\n    ],\n    [\n      \"eq\",\n      \"electricity\",\n      1\n    ]\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c20bb7c3-4e01-41dc-af1b-43612ebb8ea7",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/unit/list - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/unit/list - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/unit/list - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":128},\"name\":{\"type\":\"string\",\"maxLength\":256},\"propertyId\":{\"type\":\"string\",\"maxLength\":128},\"floorPlanId\":{\"type\":\"string\",\"maxLength\":128},\"rent\":{\"type\":\"number\"},\"deposit\":{\"type\":[\"number\",\"null\"]},\"available\":{\"type\":\"boolean\"},\"immediate\":{\"type\":\"boolean\"},\"availableDate\":{\"type\":[\"string\",\"null\"]},\"shortterm\":{\"type\":\"boolean\"},\"longterm\":{\"type\":\"boolean\"},\"unitNumber\":{\"type\":[\"string\",\"null\"],\"maxLength\":128},\"unitName\":{\"type\":[\"string\",\"null\"],\"maxLength\":128},\"surface\":{\"type\":\"number\"},\"furnished\":{\"type\":\"boolean\"},\"bedroomId\":{\"type\":[\"string\",\"null\"],\"maxLength\":128},\"bathroomId\":{\"type\":[\"string\",\"null\"],\"maxLength\":128},\"heat\":{\"type\":\"boolean\"},\"water\":{\"type\":\"boolean\"},\"electricity\":{\"type\":\"boolean\"},\"internet\":{\"type\":\"boolean\"},\"television\":{\"type\":\"boolean\"},\"order\":{\"type\":\"number\"},\"published\":{\"type\":\"boolean\"},\"createdAt\":{\"type\":\"string\"},\"updatedAt\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"propertyId\",\"floorPlanId\",\"rent\",\"deposit\",\"available\",\"immediate\",\"availableDate\",\"shortterm\",\"longterm\",\"unitNumber\",\"unitName\",\"surface\",\"furnished\",\"bedroomId\",\"bathroomId\",\"heat\",\"water\",\"electricity\",\"internet\",\"television\",\"order\",\"published\",\"createdAt\",\"updatedAt\"]}}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/unit/list - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "64d933d3-2cde-4f35-9e54-45784e6c0b7e",
          "name": "/v1/unit/create",
          "request": {
            "name": "/v1/unit/create",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "unit",
                "create"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"floorPlanId\": \"fe897wto8ribvu9024zvfvxp\",\n  \"name\": \"Unit name\",\n  \"rent\": 1000,\n  \"deposit\": 1000,\n  \"shortterm\": true,\n  \"longterm\": true,\n  \"unitNumber\": \"101\",\n  \"unitName\": \"101\",\n  \"surface\": 1000,\n  \"furnished\": true,\n  \"heat\": true,\n  \"water\": true,\n  \"electricity\": true,\n  \"internet\": true,\n  \"television\": true,\n  \"order\": 1,\n  \"bedroomId\": \"zjggk1ve17r7jmpq8dtmbjyw\",\n  \"bathroomId\": \"qae4cp7xnotk3wh26dkpp7y7\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a027722f-f3d5-4bf3-9570-ecb2ac113b80",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"floorPlanId\": \"fe897wto8ribvu9024zvfvxp\",\n  \"name\": \"Unit name\",\n  \"rent\": 1000,\n  \"deposit\": 1000,\n  \"shortterm\": true,\n  \"longterm\": true,\n  \"unitNumber\": \"101\",\n  \"unitName\": \"101\",\n  \"surface\": 1000,\n  \"furnished\": true,\n  \"heat\": true,\n  \"water\": true,\n  \"electricity\": true,\n  \"internet\": true,\n  \"television\": true,\n  \"order\": 1,\n  \"bedroomId\": \"zjggk1ve17r7jmpq8dtmbjyw\",\n  \"bathroomId\": \"qae4cp7xnotk3wh26dkpp7y7\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Created",
              "code": 201,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6720ed0d-29a3-4b15-8b3c-283c8213bdc6",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"floorPlanId\": \"fe897wto8ribvu9024zvfvxp\",\n  \"name\": \"Unit name\",\n  \"rent\": 1000,\n  \"deposit\": 1000,\n  \"shortterm\": true,\n  \"longterm\": true,\n  \"unitNumber\": \"101\",\n  \"unitName\": \"101\",\n  \"surface\": 1000,\n  \"furnished\": true,\n  \"heat\": true,\n  \"water\": true,\n  \"electricity\": true,\n  \"internet\": true,\n  \"television\": true,\n  \"order\": 1,\n  \"bedroomId\": \"zjggk1ve17r7jmpq8dtmbjyw\",\n  \"bathroomId\": \"qae4cp7xnotk3wh26dkpp7y7\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f69518ed-fdf3-4132-8c6d-37fba05f7980",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"floorPlanId\": \"fe897wto8ribvu9024zvfvxp\",\n  \"name\": \"Unit name\",\n  \"rent\": 1000,\n  \"deposit\": 1000,\n  \"shortterm\": true,\n  \"longterm\": true,\n  \"unitNumber\": \"101\",\n  \"unitName\": \"101\",\n  \"surface\": 1000,\n  \"furnished\": true,\n  \"heat\": true,\n  \"water\": true,\n  \"electricity\": true,\n  \"internet\": true,\n  \"television\": true,\n  \"order\": 1,\n  \"bedroomId\": \"zjggk1ve17r7jmpq8dtmbjyw\",\n  \"bathroomId\": \"qae4cp7xnotk3wh26dkpp7y7\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b08c722a-6c46-46f1-b518-053c6bd2a85f",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "create"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"propertyId\": \"hdsyi7gw3n77jrngcck1x33y\",\n  \"floorPlanId\": \"fe897wto8ribvu9024zvfvxp\",\n  \"name\": \"Unit name\",\n  \"rent\": 1000,\n  \"deposit\": 1000,\n  \"shortterm\": true,\n  \"longterm\": true,\n  \"unitNumber\": \"101\",\n  \"unitName\": \"101\",\n  \"surface\": 1000,\n  \"furnished\": true,\n  \"heat\": true,\n  \"water\": true,\n  \"electricity\": true,\n  \"internet\": true,\n  \"television\": true,\n  \"order\": 1,\n  \"bedroomId\": \"zjggk1ve17r7jmpq8dtmbjyw\",\n  \"bathroomId\": \"qae4cp7xnotk3wh26dkpp7y7\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9f88ec07-3aa0-4c64-a155-004d28cae166",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/v1/unit/create - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/v1/unit/create - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/v1/unit/create - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/v1/unit/create - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "4dd35ec5-efa2-432d-917d-fd208670edc0",
          "name": "/v1/unit/update/:id",
          "request": {
            "name": "/v1/unit/update/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "unit",
                "update",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "amyphpzv9inobdo3x1dfu18p",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rent\": 1500,\n  \"deposit\": 1500,\n  \"shortterm\": false,\n  \"longterm\": true,\n  \"order\": 0,\n  \"published\": true\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "40ca51e5-f43c-425e-adf3-6915bb7cdcef",
              "name": "Responds with the id of the updated unit.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "amyphpzv9inobdo3x1dfu18p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"rent\": 1500,\n  \"deposit\": 1500,\n  \"shortterm\": false,\n  \"longterm\": true,\n  \"order\": 0,\n  \"published\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"consectetur\"\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8725ae86-e591-45b9-a4b8-9a94822f9d2d",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "amyphpzv9inobdo3x1dfu18p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"rent\": 1500,\n  \"deposit\": 1500,\n  \"shortterm\": false,\n  \"longterm\": true,\n  \"order\": 0,\n  \"published\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "08aa01b1-d74b-4df2-b59d-74e69e2f2b25",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "amyphpzv9inobdo3x1dfu18p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"rent\": 1500,\n  \"deposit\": 1500,\n  \"shortterm\": false,\n  \"longterm\": true,\n  \"order\": 0,\n  \"published\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "84735040-5f63-49d8-81b9-a2327ddaa710",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "update",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "amyphpzv9inobdo3x1dfu18p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"rent\": 1500,\n  \"deposit\": 1500,\n  \"shortterm\": false,\n  \"longterm\": true,\n  \"order\": 0,\n  \"published\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2ce50b63-118a-40b9-911a-e30ae3ebb5a0",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[PUT]::/v1/unit/update/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[PUT]::/v1/unit/update/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[PUT]::/v1/unit/update/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]},\"data\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[\"id\"]}},\"required\":[\"success\",\"data\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[PUT]::/v1/unit/update/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "f296ed93-87f0-405f-922c-b1bcd9771150",
          "name": "/v1/unit/delete/:id",
          "request": {
            "name": "/v1/unit/delete/:id",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "v1",
                "unit",
                "delete",
                ":id"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "description": {
                    "content": "(Required) ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "amyphpzv9inobdo3x1dfu18p",
                  "key": "id"
                }
              ]
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "type": "any",
                  "value": "{{bearerToken}}",
                  "key": "token"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "41392747-c3c1-4c10-84e6-d4690d28fc30",
              "name": "Responds with a success message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "amyphpzv9inobdo3x1dfu18p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": true\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "12a4d6a9-499d-4af3-a354-5ef22aa9c955",
              "name": "Responds with a bad request error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "amyphpzv9inobdo3x1dfu18p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d7033a8d-a5c9-45e8-a6a0-9b1d545e7d93",
              "name": "Responds with an unauthorized message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "amyphpzv9inobdo3x1dfu18p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "581bdbd9-f18d-4ecf-bd51-94b06f6db330",
              "name": "Responds with a forbidden message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "amyphpzv9inobdo3x1dfu18p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "32f629bd-e125-4a85-ba8a-aa067a47dcd4",
              "name": "Responds with a conflict error message.",
              "originalRequest": {
                "url": {
                  "path": [
                    "v1",
                    "unit",
                    "delete",
                    ":id"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "description": {
                        "content": "(Required) ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "amyphpzv9inobdo3x1dfu18p",
                      "key": "id"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "Added as a part of security scheme: bearer",
                      "type": "text/plain"
                    },
                    "key": "Authorization",
                    "value": "Bearer <token>"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Conflict",
              "code": 409,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n  \"success\": false,\n  \"error\": {\n    \"reason\": \"in\",\n    \"issues\": [\n      {\n        \"message\": \"Excepteur enim\",\n        \"path\": [\n          \"commodo amet\",\n          \"consectetur est ad in eu\"\n        ]\n      },\n      {\n        \"message\": \"mollit reprehenderit\",\n        \"path\": [\n          \"ex in\",\n          \"deserunt cillum est dolore laboris\"\n        ]\n      }\n    ]\n  }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0283906b-bb52-446d-8ae7-7c22927ffcec",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[DELETE]::/v1/unit/delete/:id - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[DELETE]::/v1/unit/delete/:id - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[DELETE]::/v1/unit/delete/:id - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"properties\":{\"success\":{\"type\":\"boolean\",\"enum\":[true]}},\"required\":[\"success\"]}\n\n// Validate if response matches JSON schema \npm.test(\"[DELETE]::/v1/unit/delete/:id - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "/",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "3f6d80a2-2d2e-481d-82c4-9dca39fec53e",
    "name": "Real Estate API Demo",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "",
      "type": "text/plain"
    }
  }
}